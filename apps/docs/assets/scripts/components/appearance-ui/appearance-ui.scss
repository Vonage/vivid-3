@use '../../../../../../dist/libs/tokens/scss/size.variables' as size;
@use '../../../../../../libs/shared/src/lib/sass/mixins/border-radius' as
	border-radius-variables;
@use '../../../../../../libs/shared/src/lib/sass/mixins/connotation/config' with (
	$connotations: accent cta success alert warning information announcement,
	$shades: faint soft dim pale light primary primary-text primary-increment firm
		firm-all fierce fierce-primary contrast intermediate,
	$default: accent
);
@use '../../../../../../libs/shared/src/lib/sass/mixins/connotation' as
	connotation;
@use '../../../../../../libs/shared/src/lib/sass/mixins/appearance/config' as
	appearance-config with (
	$appearances: filled ghost ghost-light outlined outlined-light duotone subtle
		subtle-light fieldset listitem,
	$states: idle hover active selected checked checkedAndHover selectedAndHover
		disabled selectedAndDisabled readonly,
	$default: filled
);
@use '../../../../../../libs/shared/src/lib/sass/mixins/appearance' as
	appearance;

.wrapper {
	display: grid;
	column-gap: 8px;
	grid-template-columns: repeat(7, auto);
}
.base {
	@include connotation.connotation(appearanceUI);
	@include appearance.appearance;

	& {
		display: inline-flex;
		box-sizing: border-box;
		align-items: center;
		justify-content: center;
		border-radius: #{border-radius-variables.$border-radius-normal};
		background-color: var(#{appearance.get-appearance-token(fill)});
		block-size: 40px;
		box-shadow: inset 0 0 0 1px var(#{appearance.get-appearance-token(outline)});
		color: var(#{appearance.get-appearance-token(text)});
		padding-inline: 16px;
	}
}
