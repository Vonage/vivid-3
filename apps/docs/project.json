{
	"name": "docs",
	"$schema": "../../node_modules/nx/schemas/project-schema.json",
	"projectType": "application",
	"sourceRoot": "apps/vivid-demo/src",
	"tags": [],
	"implicitDependencies": ["components", "styles"],
	"targets": {
		"buildMeta": {
			"executor": "nx:run-commands",
			"options": {
				"commands": [
					"mkdir -p ./dist/libs/components-meta/",
					"cp ./dist/libs/components/custom-elements.json ./dist/libs/components-meta/custom-elements.json"
				],
				"parallel": false
			},
			"dependsOn": ["^generateMeta"]
		},
		"clean": {
			"executor": "nx:run-commands",
			"options": {
				"commands": ["npx rimraf ./dist/apps/docs"]
			}
		},
		"build": {
			"executor": "nx:run-commands",
			"options": {
				"commands": [
					"npx esbuild ./dist/libs/components/index.js --bundle --outfile=./dist/libs/components-bundle/index.js --format=esm",
					"npx eleventy --config=./apps/docs/.eleventy.js",
					"npx pagefind --site ./dist/apps/docs"
				],
				"parallel": false
			},
			"dependsOn": ["buildMeta", "clean"]
		},
		"serve": {
			"executor": "nx:run-commands",
			"options": {
				"commands": [
					"npx esbuild ./dist/libs/components/index.js --bundle --outfile=./dist/libs/components-bundle/index.js --format=esm --watch",
					"npx nx serve styles",
					"WATCH=true npx nx build components --watch",
					"npx eleventy --config=./apps/docs/.eleventy.js --serve"
				]
			},
			"dependsOn": ["buildMeta", "clean"]
		},
		"test": {
			"executor": "@nx/jest:jest",
			"outputs": ["{workspaceRoot}/coverage/{projectRoot}"],
			"options": {
				"jestConfig": "apps/docs/jest.config.ts"
			}
		},
		"lint": {
			"executor": "@nx/eslint:lint",
			"outputs": ["{options.outputFile}"]
		},
		"stylelint": {
			"executor": "nx-stylelint:lint",
			"outputs": ["{options.outputFile}"],
			"options": {
				"lintFilePatterns": ["apps/docs/**/*.scss"]
			}
		},
		"typecheck": {
			"executor": "nx:run-commands",
			"options": {
				"cwd": "apps/docs",
				"commands": ["tsc -p tsconfig.lib.json --noEmit"],
				"forwardAllArgs": false
			}
		}
	}
}
