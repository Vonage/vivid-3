@use '../../../../../../../node_modules/@vonage/vivid-tokens/dist/sass/themes/consts' as theme-consts;
@use '../connotation' as connotation;
@use '../../functions' as functions;
@use 'variables' as variables;
@use 'config' as config;
@use 'sass:selector';
@use 'sass:list';
@use 'sass:map';


////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
$all-appearances: (
  filled: 'filled',
  outlined: 'outlined',
  soft: 'soft',
  text: 'text',
  ghost: 'ghost',
);

//$appearance-set: filled ghost outlined;
//$states: idle disabled hover;



@function get-variable($type) {
  $prefix: --_appearance-color;
  @return #{$prefix}-#{$type};
}

$selectors: (
  idle: '&',
  hover: '&.hovered',
  disabled: '&.disabled',
  selected: '&.selected',
  active: '&.active',
);



@mixin appearance {

  @each $state in config.$states {
    #{map.get($selectors, $state)} {

      $state-mapping: map.get(variables.$states-mapping, $state);

      @each $appearance in config.$appearances {
        &.appearance-#{$appearance} {
          $appearance-mapping: map.get($state-mapping, $appearance);
          @each $type, $key in $appearance-mapping {
            #{get-variable($type)}: $key;
          }
        }
      }
    }
  }
}

