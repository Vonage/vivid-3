@use "sass:map";

@use "../../../../..//dist/libs/tokens/scss/tokens.constants" as constants;

$selectors: (
	bold: "b, strong",
	code: "pre, var, code, kbd, samp"
);

@mixin typography-base {
	font: var(#{constants.$vvd-typography-base});
	font-feature-settings: "kern"; /* turns on kerning */
	text-rendering: optimizeLegibility; /* emphasise on legibility when rendering, turns on ligatures and kerning */
	-webkit-font-smoothing: antialiased; /* apply font anti-aliasing for Webkit on OSX */
	-moz-osx-font-smoothing: grayscale; /* apply font anti-aliasing for Firefox on OSX */
}

.vvd-root {
	&:root {
		// <--- When 'vvd-root' is set on the `:root` (html element), typeface sizes are able to descend from the root font-size, thus comply with the [WCAG 1.4.4](https://www.w3.org/WAI/WCAG21/Understanding/resize-text)
		--vvd-size-font-scale-base: 1rem;
		font-size: unset; // resolves to the user-agent default font size (generally 16px)

		> body {
			@include typography-base;
		}
	}

	&:not(:root) {
		@include typography-base;
	}

	p,
	.font-base-code,
	.font-base,
	.font-base-bold,
	.font-base-condensed,
	.font-base-extended,
	.font-base-condensed-bold,
	.font-base-extended-bold {
		&.tight {
			margin-block: 0;
		}
	}

	p,
	.font-base {
		font: var(#{constants.$vvd-typography-base});
	}

	.font-base-bold {
		font: var(#{constants.$vvd-typography-base-bold});
	}

	.font-base-condensed {
		font: var(#{constants.$vvd-typography-base-condensed});
	}

	.font-base-condensed-bold {
		font: var(#{constants.$vvd-typography-base-condensed-bold});
	}

	.font-base-extended {
		font: var(#{constants.$vvd-typography-base-extended});
	}

	.font-base-extended-bold {
		font: var(#{constants.$vvd-typography-base-extended-bold});
	}

	.font-base-code {
		font: var(#{constants.$vvd-typography-base-code});
	}

	#{map.get($selectors, "bold")} {
		font: var(#{constants.$vvd-typography-base-bold});
	}

	#{map.get($selectors, "code")} {
		font: var(#{constants.$vvd-typography-base-code});
	}

	.headline {
		font: var(#{constants.$vvd-typography-headline});
		margin-block: 40px;

		&.tight {
			margin-block: 0;
		}
	}

	.subtitle {
		font: var(#{constants.$vvd-typography-subtitle});
		margin-block: 40px;

		&.tight {
			margin-block: 0;
		}
	}

	h1,
	.heading1 {
		font: var(#{constants.$vvd-typography-heading-1});
		margin-block: 32px;

		&.tight {
			margin-block: 0;
		}
	}

	h2,
	.heading2 {
		font: var(#{constants.$vvd-typography-heading-2});
		margin-block: 32px;

		&.tight {
			margin-block: 0;
		}
	}

	h3,
	.heading3 {
		font: var(#{constants.$vvd-typography-heading-3});
		margin-block: 24px;

		&.tight {
			margin-block: 0;
		}
	}

	h4,
	.heading4 {
		font: var(#{constants.$vvd-typography-heading-4});
		margin-block: 24px;

		&.tight {
			margin-block: 0;
		}
	}

	small,
	figcaption {
		font: var(#{constants.$vvd-typography-base-condensed});

		#{map.get($selectors, "bold")} {
			font: var(#{constants.$vvd-typography-base-condensed-bold});
		}
	}

	sub,
	sup {
		font: var(#{constants.$vvd-typography-base-condensed});
		font-size: 75%;
		line-height: 0;
		position: relative;
		vertical-align: baseline;
	}

	sub {
		bottom: -0.25em;
	}

	sup {
		top: -0.5em;
	}
}
