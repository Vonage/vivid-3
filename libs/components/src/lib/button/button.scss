@use 'partials/variables' as variables;
@use 'partials/mixins' as mixins;
@use '../focus/partials/variables' as focus-variables;

@use '../../../../shared/src/lib/sass/mixins/connotation/config' with (
	$subset: primary cta success alert,
	$shades: basis basis-increment contrast fierce firm soft pale,
	$default: primary,
);
@use '../../../../shared/src/lib/sass/mixins/connotation' as connotation;

@use '../../../../shared/src/lib/sass/mixins/appearance/config' as appearance-config with (
	$appearances: filled outlined ghost,
	$states: idle hover disabled active,
	$default: ghost,
);
@use '../../../../shared/src/lib/sass/mixins/appearance' as appearance;

:host {
	outline: 0 none;
}

.control {
	@include connotation.connotation;
	@include appearance.appearance;

	position: relative;
	display: inline-flex;
	box-sizing: border-box;
	align-items: center;
	border: 0 none;
	background-color: var(#{appearance.get-variable(fill)});
	block-size: var(#{variables.$block-size});
	box-shadow: inset 0 0 0 1px var(#{appearance.get-variable(outline)});
	color: var(#{appearance.get-variable(text)});
	cursor: pointer;
	outline: 0 none;
	vertical-align: middle;

	&.icon-only {
		padding-inline: 0;
		place-content: center;
		@supports (aspect-ratio: 1) {
			aspect-ratio: 1;
		}
		@supports not (aspect-ratio: 1) {
			inline-size: var(#{variables.$block-size});
		}
	}

	&.stacked {
		flex-direction: column;
		justify-content: center;
	}

}

/* Size */

.control {
  &:not(.stacked) {
    &.size-condensed {
      @include mixins.get-size-properties(32px, caption-bold, 8px, 12px, 16px);
    }

    &.size-extended {
      @include mixins.get-size-properties(48px, body-1-bold, 10px, 20px, 24px);
    }

    &:not(.size-condensed, .size-extended) {
      @include mixins.get-size-properties(40px, button, 8px, 16px, 20px);
    }
  }

  &.stacked {
    @include mixins.get-size-properties(68px, body-2-bold, 10px, 16px, 18px);

    &.icon-only {
      .icon {
        font-size: 90px;
      }
    }
  }
}


/* Shape */

// stylelint-disable-next-line no-descending-specificity
.control:not(.shape-pill) {
	border-radius: 6px;
}

.control.shape-pill {
	&:not(.icon-only) {
		border-radius: 24px;
	}

	&.icon-only {
		border-radius: 50%;
	}
}

/* Icon */

// stylelint-disable-next-line no-descending-specificity
.icon {

	// stylelint-disable-next-line no-descending-specificity
	:not(.stacked):not(.icon-trailing) & {
		margin-inline-end: var(#{variables.$icon-gap});
	}

	// stylelint-disable-next-line no-descending-specificity
	:not(.stacked).icon-trailing & {
		margin-inline-start: var(#{variables.$icon-gap});
	}

	// stylelint-disable-next-line no-descending-specificity
	.stacked:not(.icon-trailing) & {
		margin-block-end: var(#{variables.$icon-gap});
	}

	// stylelint-disable-next-line no-descending-specificity
	.stacked.icon-trailing & {
		margin-block-start: var(#{variables.$icon-gap});
	}

	// stylelint-disable-next-line no-descending-specificity
	.icon-trailing & {
		order: 1;
	}
}

.focus-indicator {
	:not(:focus) & {
		display: none;
	}

	.appearance-outlined &,
	.appearance-ghost & {
		#{focus-variables.$focus-stroke-gap-color}: transparent;
	}
}
