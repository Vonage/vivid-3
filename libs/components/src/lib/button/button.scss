@use '../../../../shared/src/lib/sass/mixins/typography' as typography;
@use 'partials/variables' as variables;
@use '../focus/partials/variables' as focus-variables;

@use '../../../../shared/src/lib/sass/mixins/connotation/config' with (
	$subset: primary cta success alert,
	$shades: diverse,
	$default: primary,
);
@use '../../../../shared/src/lib/sass/mixins/connotation' as connotation;

@use '../../../../shared/src/lib/sass/mixins/appearance/config' as appearance-config with (
	$subset: filled filled-idle outlined outlined-idle ghost ghost-idle,
	$default: ghost,
);
@use '../../../../shared/src/lib/sass/mixins/appearance' as appearance;
@use '../../../../shared/src/lib/sass/mixins/states' as states;

:host {
	outline: 0 none;
}

.control {
	@include connotation.connotation;
	@include appearance.appearance;
  @include states.state;

	position: relative;
	display: inline-flex;
	box-sizing: border-box;
	align-items: center;
	border: 0 none;
	background-color: var(#{appearance.$appearance-color-fill});
	block-size: var(#{variables.$block-size});
	box-shadow: inset 0 0 0 1px var(#{appearance.$appearance-color-outline});
	color: var(#{appearance.$appearance-color-text});
	outline: 0 none;
	vertical-align: middle;

	&.icon-only {
		padding-inline: 0;
		place-content: center;
		@supports (aspect-ratio: 1) {
			aspect-ratio: 1;
		}
		@supports not (aspect-ratio: 1) {
			inline-size: var(#{variables.$block-size});
		}
	}

}

/* Size */

.control.size-base-small {
	#{variables.$block-size}: 32px;
	@include typography.typography-cat-shorthand('caption-bold');

	&:not(.icon-only) {
		#{variables.$icon-gap}: 8px;

		padding-inline: 12px;
	}

	.icon {
		font-size: 16px;
	}
}

.control.size-base-large {
	#{variables.$block-size}: 48px;
	@include typography.typography-cat-shorthand('body-1-bold');

	&:not(.icon-only) {
		#{variables.$icon-gap}: 10px;

		padding-inline: 20px;
	}

	.icon {
		font-size: 24px;
	}
}

.control:not(.size-base-small):not(.size-base-large) {
	#{variables.$block-size}: 40px;
	@include typography.typography-cat-shorthand('button');

	&:not(.icon-only) {
		#{variables.$icon-gap}: 8px;

		padding-inline: 16px;
	}

	.icon {
		font-size: 20px;
	}
}

/* Shape */

// stylelint-disable-next-line no-descending-specificity
.control:not(.shape-pill) {
	border-radius: 6px;
}

.control.shape-pill {
	&:not(.icon-only) {
		border-radius: 24px;
	}

	&.icon-only {
		border-radius: 50%;
	}
}

/* Icon */

// stylelint-disable-next-line no-descending-specificity
.icon {
	// stylelint-disable-next-line no-descending-specificity
	&:not(.icon-trailing) {
		margin-inline-end: var(#{variables.$icon-gap});
	}

	&.icon-trailing {
		order: 1;
		margin-inline-start: var(#{variables.$icon-gap});
	}
}

.focus-indicator {
	:not(:focus) & {
		display: none;
	}

	.appearance-outlined &,
	.appearance-ghost & {
		#{focus-variables.$focus-stroke-gap-color}: transparent;
	}
}
