@use '../../../../shared/src/lib/sass/mixins/connotation/config' with (
	$connotations: accent announcement cta success alert information,
	$shades: primary,
);
@use '../../../../shared/src/lib/sass/mixins/connotation' as connotation;
@use '../../../../../dist/libs/tokens/scss/size.variables' as size;
@use "partials/variables" as variables;


:host {
	display: inline-block;
	vertical-align: sub;
}

.control {
	@include connotation.connotation;

	display: flex;
	margin: unset;
	block-size: var(#{variables.$block-size});
	color: currentColor;
	contain: strict;
	inline-size: var(#{variables.$block-size});
}

// TODO: add a :where selector to unset any connotation variant from a mixin level
.control[class*="connotation"] {
	color: var(#{connotation.get-connotation-token(primary)});
}

svg {
	margin: auto;
	block-size: inherit;
	inline-size: inherit;
}

/* Size */

.control:not(.size-condensed):not(.size-normal):not(.size-expanded) {
	#{variables.$block-size}: 1em;
}

.control.size-condensed {
	#{variables.$block-size}: calc(#{size.$vvd-size-normal} - #{size.$vvd-size-super-condensed});
}

.control.size-normal {
	#{variables.$block-size}: #{size.$vvd-size-super-condensed};

}

.control.size-expanded {
	#{variables.$block-size}: #{size.$vvd-size-condensed};
}
