@use "../../../../shared/src/lib/sass/mixins/focus" as focus;
@use "../../../../shared/src/lib/sass/mixins/focus" as focus-variables;
@use "../../../../../dist/libs/tokens/scss/tokens.constants" as constants;
@use "../../../../shared/src/lib/sass/mixins/connotation/config" with (
	$connotations: accent,
	$shades: primary primary-text primary-increment faint soft pale dim,
	$default: accent
);
@use "../../../../shared/src/lib/sass/mixins/connotation" as connotation;
@use "../../../../shared/src/lib/sass/mixins/appearance/config" as appearance-config with (
	$appearances: listitem,
	$states: idle hover disabled active selected selectedAndHover,
	$default: listitem,
);
@use "../../../../shared/src/lib/sass/mixins/appearance" as appearance;
@use "../../../../../dist/libs/tokens/scss/size.variables" as size;
@use "../listbox/partials/variables" as listbox-variables;
@use "../../../../shared/src/lib/sass/mixins/border-radius" as border-radius-variables;

:host([disabled]) {
	cursor: not-allowed;
}

.base {
	$min-block-size: #{size.$vvd-size-normal};
	$gap: 12px;
	$gutter: 16px;

	@include connotation.connotation (option);
	@include appearance.appearance;

	display: flex;
	box-sizing: border-box;
	align-items: center;
	border-radius: #{border-radius-variables.$border-radius-normal};
	background-color: var(#{appearance.get-appearance-token(fill)});
	box-shadow: inset 0 0 0 1px var(#{appearance.get-appearance-token(outline)});
	color: var(#{listbox-variables.$option-appearance-color-text}, var(#{appearance.get-appearance-token(text)}));
	font: var(#{constants.$vvd-typography-base});
	gap: $gap;
	hyphens: auto;
	inline-size: 100%;
	min-block-size: $min-block-size;
	padding-inline: $gutter;
	vertical-align: middle;
	word-break: break-word;

	@supports (user-select: none) {
		user-select: none;
	}

	&:not(.disabled) {
		cursor: pointer;
	}

	&.disabled {
		pointer-events: none;
	}

	.text {
		font: var(#{constants.$vvd-typography-base});
	}

	:host([aria-checked="true"]) & {
		#{focus-variables.$focus-stroke-color}: var(#{constants.$vvd-color-neutral-500});
		#{focus-variables.$focus-stroke-gap-color}: transparent;

		@include focus.focus;
	}
}

slot[name="icon"] {
	font-size: 20px;
	line-height: 1;

	.base:not(.disabled, .selected) & {
		color: var(#{constants.$vvd-color-neutral-600});
	}
}

