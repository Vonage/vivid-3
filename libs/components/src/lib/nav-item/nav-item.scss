@use 'sass:map';
@use '../../../../../dist/libs/tokens/scss/tokens.constants' as constants;
@use '../../../../shared/src/lib/sass/mixins/focus' as focus;
@use '../../../../shared/src/lib/sass/mixins/focus' as focus-variables;
@use '../../../../shared/src/lib/sass/mixins/border-radius' as
	border-radius-variables;
@use '../../../../shared/src/lib/sass/mixins/connotation/config' with (
	$connotations: accent cta,
	$shades: primary primary-text primary-increment contrast fierce fierce-primary
		faint firm soft,
	$default: accent
);
@use '../../../../shared/src/lib/sass/mixins/connotation' as connotation;
@use '../../../../shared/src/lib/sass/mixins/appearance/config' as
	appearance-config with (
	$appearances: ghost ghost-light,
	$states: idle hover active selected selectedAndHover,
	$default: ghost
);
@use '../../../../shared/src/lib/sass/mixins/appearance' as appearance;
@use '../../../../../dist/libs/tokens/scss/size.variables' as size;

.control {
	$min-block-size: #{size.$vvd-size-normal};
	$gap: 12px;
	$gutter: 16px;

	display: inline-flex;
	box-sizing: border-box;
	align-items: center;
	border-radius: #{border-radius-variables.$border-radius-normal};
	background-color: var(#{appearance.get-appearance-token(fill)});
	box-shadow: inset 0 0 0 1px var(#{appearance.get-appearance-token(outline)});
	font: var(#{constants.$vvd-typography-base});
	gap: $gap;
	hyphens: auto;
	inline-size: 100%;
	min-block-size: $min-block-size;
	text-decoration: none;
	vertical-align: middle;

	&[aria-current] {
		background-color: var(#{connotation.get-connotation-token(primary)});
		color: var(#{appearance.get-appearance-token(text)});

		@supports (
			color: color-mix(in srgb, var(--one-color), var(--second-color))
		) {
			background-color: var(#{appearance.get-appearance-token(fill)});
		}
	}

	&:not([aria-current]) {
		color: var(#{constants.$vvd-color-canvas-text});
	}

	@include connotation.connotation(nav-item);
	@include appearance.appearance(
		appearance.state-selectors(
			map.merge(
				appearance.$state-aspect-selectors,
				(
					selected: '[aria-current]',
				)
			)
		)
	);

	&.icon-only {
		display: flex;
		block-size: $min-block-size;
		inline-size: $min-block-size;
		place-content: center;
	}

	&:not(.icon-only) {
		padding-block: 10px;
		padding-inline: $gutter;
	}

	&:focus-visible {
		@include focus.focus;
	}

	:host(:not([aria-current='page'])) & {
		#{focus-variables.$focus-stroke-gap-color}: transparent;
	}
}

slot[name='icon'] {
	font-size: 20px;
	line-height: 1;
}
