@use 'partials/variables' as variables;
@use '@repo/shared/mixins/focus' as focus;
@use '@repo/shared/mixins/focus' as focus-variables;
@use '@repo/shared/mixins/border-radius' as border-radius-variables;
@use '@repo/shared/mixins/connotation/config' with (
	$connotations: accent,
	$shades: primary primary-text primary-increment contrast fierce firm soft
		faint fierce-primary,
	$default: accent
);
@use '@repo/shared/mixins/connotation' as connotation;
@use '@repo/shared/mixins/appearance/config' as appearance-config with (
	$appearances: ghost,
	$states: idle hover disabled active,
	$default: ghost
);
@use '@repo/shared/mixins/appearance' as appearance;

.control {
	@include connotation.connotation(button);
	@include appearance.appearance;
	& {
		#{focus-variables.$focus-stroke-gap-color}: transparent;

		display: inline-flex;
		box-sizing: border-box;
		align-items: center;
		justify-content: center;
		border: 0 none;
		border-radius: #{border-radius-variables.$border-radius-full};
		margin: 0;
		background-color: var(#{appearance.get-appearance-token(fill)});
		block-size: var(#{variables.$button-block-size}, 24px);
		box-shadow: inset 0 0 0 1px var(#{appearance.get-appearance-token(outline)});
		color: var(#{appearance.get-appearance-token(text)});
		cursor: pointer;
		padding-inline: calc(var(#{variables.$button-block-size}, 24px) / 6);
		vertical-align: middle;

		@supports (aspect-ratio: auto) {
			padding: 0;
			aspect-ratio: 1/1;
		}
	}

	&:focus-visible {
		@include focus.focus;
	}
}

slot[name='icon'] {
	font-size: var(#{variables.$button-icon-size}, 16px);
	line-height: 1;
}
