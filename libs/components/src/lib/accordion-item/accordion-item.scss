@use '../../../../../dist/libs/tokens/scss/tokens.constants' as constants;
@use '../../../../shared/src/lib/sass/mixins/connotation/config' with (
	$connotations: accent,
	$shades: faint soft firm,
	$default: accent
);
@use '../../../../shared/src/lib/sass/mixins/connotation' as connotation;
@use '../../../../shared/src/lib/sass/mixins/appearance/config' as
	appearance-config with (
	$appearances: ghost,
	$states: idle hover active,
	$default: ghost
);
@use '../../../../shared/src/lib/sass/mixins/appearance' as appearance;
@use '../../../../../dist/libs/tokens/scss/size.variables' as size;
@use '../../../../shared/src/lib/sass/mixins/focus' as focus;
@use '../../../../shared/src/lib/sass/mixins/focus' as focus-variables;

:host {
	display: flex;
	box-sizing: border-box;
	flex-direction: column;
}

.heading-container {
	margin: 0;
}

.heading-button {
	@include appearance.appearance;
	@include connotation.connotation(accordion-item);

	--vvd-accordion-item-accent-firm: var(--vvd-accordion-item-accent-primary);

	#{focus-variables.$focus-stroke-gap-color}: transparent;

	&:focus-visible {
		@include focus.focus;
	}

	display: flex;
	width: 100%;
	align-items: center;
	padding: 16px;
	border: none;
	background-color: var(#{appearance.get-appearance-token(fill)});
	color: var(#{appearance.get-appearance-token(text)});
	cursor: pointer;
	text-align: left;

	&.size-condensed {
		font: var(#{constants.$vvd-typography-base-extended-bold});
		gap: 12px;
	}

	&:not(.size-condensed) {
		font: var(#{constants.$vvd-typography-heading-4});
		gap: 16px;
	}
}

.heading-content {
	flex: auto;
}

.meta {
	overflow: hidden;
	max-width: 20%;
	flex-shrink: 0;
	color: var(#{constants.$vvd-color-neutral-600});
	text-align: end;
	text-overflow: ellipsis;
	white-space: nowrap;

	.heading-button:not(.size-condensed) & {
		font: var(#{constants.$vvd-typography-base-bold});
	}

	.heading-button.size-condensed & {
		font: var(#{constants.$vvd-typography-base-condensed-bold});
	}
}

.region {
	display: none;
	padding: 8px 32px 24px 16px;

	&:not(.size-condensed) {
		&.padded {
			padding-inline-start: 52px;
		}
	}

	:host([expanded]) & {
		display: block;
	}

	&.size-condensed {
		&.padded {
			padding-inline-start: 44px;
		}
	}
}

slot[name='icon'] {
	color: var(#{constants.$vvd-color-neutral-600});

	.heading-button:not(.size-condensed) & {
		font: inherit;
	}

	.heading-button.size-condensed & {
		font: var(#{constants.$vvd-typography-base-extended});
	}

	:host(:not([icon-trailing])) &:last-of-type {
		color: var(#{appearance.get-appearance-token(text)});
	}
}
