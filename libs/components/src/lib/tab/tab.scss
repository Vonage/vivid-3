@use "../tabs/partials/variables" as tabs-variables;
@use "../../../../../dist/libs/tokens/scss/tokens.constants" as constants;
@use "../focus/partials/variables" as focus-variables;

@use "../../../../shared/src/lib/sass/mixins/connotation/config" with (
	$connotations: accent cta,
	$shades: primary primary-text firm faint fierce pale,
	$default: accent,
);
@use "../../../../shared/src/lib/sass/mixins/connotation" as connotation;

@use "../../../../shared/src/lib/sass/mixins/appearance/config" as appearance-config with (
	$appearances: ghost,
	$states: idle hover disabled active,
	$default: ghost
);
@use "../../../../shared/src/lib/sass/mixins/appearance" as appearance;


@supports selector(:focus-visible) {
	:host(:focus) {
		outline: none;
	}
}

:host(.vertical) {
	justify-content: end;
	grid-column: 1 / auto;
}

.base {
	$min-block-size: 40px;
	@include appearance.appearance;
	@include connotation.connotation (tab);

	position: relative;
	display: flex;
	box-sizing: border-box;
	align-items: center;
	padding: var(#{tabs-variables.$tabs-tablist-gutter});
	background-color: var(#{appearance.get-appearance-token(fill)});
	box-shadow: inset 0 0 0 1px var(#{appearance.get-appearance-token(outline)});
	color: var(#{appearance.get-appearance-token(text)});
	font: var(#{constants.$vvd-typography-base});
	gap: var(#{tabs-variables.$tabs-tablist-gutter});
	min-block-size: $min-block-size;
	vertical-align: middle;
	white-space: nowrap;

	@supports (user-select: none) {
		user-select: none;
	}

	&:not(.disabled) {
		cursor: pointer;
	}

	&.disabled {
		cursor: not-allowed;
		pointer-events: none;
	}

	:host(.vertical) & {
		padding-inline-start: calc(var(#{tabs-variables.$tabs-active-indicator-stroke-width}) + var(#{tabs-variables.$tabs-tablist-gutter}));
	}
}

.focus-indicator {
	:host(:not(:focus-visible)) & {
		display: none;
	}
}

.icon {
	font-size: 20px;

	.icon-trailing & {
		order: 1;
		margin-inline-start: auto;
	}

}

:host(:not(.vertical)) {
	.base::after {
		position: absolute;
		background: currentColor;
		block-size: 2px;
		content: "";
		inline-size: calc(100% + var(#{tabs-variables.$tabs-tablist-gutter}) * 2);
		inset-block-end: 0;
		margin-inline: calc(var(#{tabs-variables.$tabs-tablist-gutter}) * -2);
		pointer-events: none;
		transition-property: opacity;
	}

	&:host([aria-selected="true"]) {
		.base::after {
			transition-delay: #{tabs-variables.$tabs-active-indicator-transition-delay};
		}
	}

	&:host(:not([aria-selected="true"])) {
		.base::after {
			opacity: 0;
		}
	}
}
