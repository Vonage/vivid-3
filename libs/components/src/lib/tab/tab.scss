@use '../tabs/partials/variables' as tabs-variables;
@use '../../../../../dist/libs/tokens/scss/tokens.constants' as constants;
@use '../../../../shared/src/lib/sass/mixins/focus' as focus;
@use '../../../../shared/src/lib/sass/mixins/focus' as focus-variables;
@use '../../../../shared/src/lib/sass/mixins/border-radius' as
	border-radius-variables;
@use '../../../../shared/src/lib/sass/mixins/connotation/config' with (
	$connotations: accent cta,
	$shades: primary primary-text firm faint fierce pale,
	$default: accent
);
@use '../../../../shared/src/lib/sass/mixins/connotation' as connotation;
@use '../../../../shared/src/lib/sass/mixins/appearance/config' as
	appearance-config with (
	$appearances: ghost,
	$states: idle hover disabled active,
	$default: ghost
);
@use '../../../../shared/src/lib/sass/mixins/appearance' as appearance;

:host(.vertical) {
	justify-content: end;
	grid-column: 1 / auto;
}

:host([disabled]) {
	cursor: not-allowed;
}

:host(:focus-visible) {
	outline: none;
}

.base {
	$min-block-size: 40px;

	@include appearance.appearance;
	@include connotation.connotation(tab);

	position: relative;
	display: flex;
	box-sizing: border-box;
	align-items: center;
	padding: var(#{tabs-variables.$tabs-tablist-gutter});
	background-color: var(#{appearance.get-appearance-token(fill)});
	box-shadow: inset 0 0 0 1px var(#{appearance.get-appearance-token(outline)});
	color: var(#{appearance.get-appearance-token(text)});
	font: var(#{constants.$vvd-typography-base-bold});
	gap: var(#{tabs-variables.$tabs-tablist-gutter});
	min-block-size: $min-block-size;
	vertical-align: middle;
	white-space: nowrap;

	@supports (user-select: none) {
		user-select: none;
	}

	&:not(.shape-sharp) {
		border-radius: #{border-radius-variables.$border-radius-normal};
	}

	&:not(.disabled) {
		cursor: pointer;
	}

	&.disabled {
		pointer-events: none;
	}

	:host(:focus-visible) & {
		#{focus-variables.$focus-stroke-gap-color}: transparent;

		@include focus.focus;
	}

	:host(.vertical) & {
		margin-inline-start: var(
			#{tabs-variables.$tabs-active-indicator-stroke-width}
		);
	}
}

slot[name='icon'] {
	font-size: 20px;
	line-height: 1;

	.icon-trailing & {
		display: inline-block;
		order: 1;
		margin-inline-start: auto;
	}
}

:host(:not(.vertical)) {
	.base::after {
		position: absolute;
		border-radius: #{border-radius-variables.$border-radius-condensed};
		background: currentColor;
		block-size: 2px;
		content: '';
		inline-size: 100%;
		inset-block-end: 0;
		inset-inline-start: 0;
		pointer-events: none;
		transition-property: opacity;
	}

	&:host([aria-selected='true']) {
		.base::after {
			transition-delay: #{tabs-variables.$tabs-active-indicator-transition-delay};
		}
	}

	&:host(:not([aria-selected='true'])) {
		.base::after {
			opacity: 0;
		}
	}
}
