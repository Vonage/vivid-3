@use 'partials/variables' as variables;
@use '../tabs/partials/variables' as tabs-variables;
@use '../../../../../dist/libs/tokens/scss/tokens.constants' as constants;
@use '../../../../shared/src/lib/sass/mixins/focus' as focus;
@use '../../../../shared/src/lib/sass/mixins/focus' as focus-variables;
@use '../../../../shared/src/lib/sass/mixins/border-radius' as
	border-radius-variables;
@use '../../../../shared/src/lib/sass/mixins/connotation/config' with (
	$connotations: accent cta,
	$shades: primary-text firm faint fierce pale soft,
	$default: accent
);
@use '../../../../shared/src/lib/sass/mixins/connotation' as connotation;
@use '../../../../shared/src/lib/sass/mixins/appearance/config' as
	appearance-config with (
	$appearances: ghost,
	$states: idle hover disabled active,
	$default: ghost
);
@use '../../../../shared/src/lib/sass/mixins/appearance' as appearance;
@include connotation.variables-backwards-compatibility('tab', '.base');

:host(.vertical) {
	justify-content: end;
	grid-column: 1 / auto;
}

:host([disabled]) {
	cursor: not-allowed;
}

:host([removable]) {
	position: relative;
}

:host(:focus-visible) {
	outline: none;
}

.base {
	$min-block-size: 40px;

	@include appearance.appearance;
	@include connotation.connotation(tab);

	& {
		position: relative;
		display: flex;
		box-sizing: border-box;
		align-items: center;
		justify-content: var(#{variables.$justify-content});
		padding: var(#{tabs-variables.$tabs-tablist-gutter});
		background-color: var(#{appearance.get-appearance-token(fill)});
		box-shadow: inset 0 0 0 1px var(#{appearance.get-appearance-token(outline)});
		color: var(#{appearance.get-appearance-token(text)});
		font: var(#{constants.$vvd-typography-base-bold});
		gap: var(#{tabs-variables.$tabs-tablist-gutter});
		min-block-size: $min-block-size;
		vertical-align: middle;
		white-space: nowrap;
	}

	@supports (user-select: none) {
		user-select: none;
	}

	&:not(.shape-sharp) {
		border-radius: #{border-radius-variables.$border-radius-normal};
	}

	&:not(.disabled) {
		cursor: pointer;
	}

	&.disabled {
		pointer-events: none;
	}

	&.removable {
		padding-inline-end: 40px;
	}

	:host(:focus-visible) & {
		#{focus-variables.$focus-stroke-gap-color}: transparent;

		@include focus.focus;
	}

	:host(.vertical) & {
		margin-inline-start: var(
			#{tabs-variables.$tabs-active-indicator-stroke-width}
		);
	}
}

slot[name='icon'] {
	font-size: 20px;
	line-height: 1;

	.icon-trailing & {
		display: inline-block;
		order: 1;
		margin-inline-start: auto;
	}
}

.close {
	position: absolute;
	display: flex;
	align-items: center;
	justify-content: center;
	block-size: 24px;
	inline-size: 24px;
	inset-block-start: 50%;
	inset-inline-end: 4px;
	transform: translateY(-50%);

	vwc-icon {
		font-size: 12px;
	}

	.icon {
		display: flex;
		align-items: center;
		justify-content: center;
	}
}
