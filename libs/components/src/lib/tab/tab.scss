@use "../tabs/partials/variables" as tabs-variables;
@use "../../../../../dist/libs/tokens/scss/tokens.constants" as constants;

@use "../../../../shared/src/lib/sass/mixins/connotation/config" with (
	$connotations: accent information,
	$shades: primary faint soft,
	$default: accent
);
@use "../../../../shared/src/lib/sass/mixins/connotation" as connotation;

@use "../../../../shared/src/lib/sass/mixins/appearance/config" as appearance-config with (
	$appearances: ghost,
	$states: idle hover disabled active,
	$default: ghost
);
@use "../../../../shared/src/lib/sass/mixins/appearance" as appearance;

:host(.vertical) {
	justify-content: end;
	grid-column: 1 / auto;
}

@supports selector(:focus-visible) {
	:host(:focus) {
		outline: none;
	}
}

.base {
	$min-block-size: 48px;
	$gutter: 8px;

	@include appearance.appearance;
	@include connotation.connotation;

	position: relative;
	display: inline-flex;
	box-sizing: border-box;
	align-items: center;
	background-color: var(#{appearance.get-appearance-token(fill)});
	box-shadow: inset 0 0 0 1px var(#{appearance.get-appearance-token(outline)});
	color: var(#{appearance.get-appearance-token(text)});
	font: var(#{constants.$vvd-typography-base});
	margin: $gutter;
	padding: $gutter;
	min-block-size: $min-block-size;
	vertical-align: middle;
	white-space: nowrap;

	&.selected {
		background-color: var(#{constants.$vvd-color-neutral-100});
	}

	@supports (user-select: none) {
		user-select: none;
	}

	&:not(.disabled) {
		cursor: pointer;
	}

	&.disabled {
		cursor: not-allowed;
	}

	:host(.vertical) & {
		padding-inline-start: calc(var(#{tabs-variables.$tabs-active-indicator-stroke-width}) + $gutter);
	}
}

.focus-indicator {
	.base:not(:focus-visible) & {
		display: none;
	}
}

/* Shape */

.base:not(.shape-rounded) {
	border-radius: 0;
}
.base.shape-rounded {
	border-radius: 6px;
}

.icon {
	font-size: 20px;
}
