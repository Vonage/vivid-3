@use '../../../../../dist/libs/tokens/scss/tokens.constants' as constants;
@use '../../../../shared/src/lib/sass/mixins/connotation/config' with (
	$connotations: accent success information alert warning announcement,
	$shades: intermediate faint fierce,
	$default: accent
);
@use '../../../../shared/src/lib/sass/mixins/connotation' as connotation;
@use '../../../../shared/src/lib/sass/mixins/appearance/config' as
	appearance-config with (
	$appearances: harmony,
	$states: idle,
	$default: harmony
);
@use '../../../../shared/src/lib/sass/mixins/appearance' as appearance;
@use '../../../../../dist/libs/tokens/scss/size.variables' as size;
@use '../../../../shared/src/lib/sass/mixins/border-radius' as
	border-radius-variables;

.base {
	@include connotation.connotation(note);
	@include appearance.appearance;

	& {
		display: flex;
		align-items: flex-start;
		padding: #{size.$vvd-size-ultra-condensed};
		border-radius: #{border-radius-variables.$border-radius-normal};
		background-color: var(#{appearance.get-appearance-token(fill)});
		box-shadow: inset 0 0 0 1px var(#{appearance.get-appearance-token(outline)});
		color: var(--vvd-color-canvas-text);
		column-gap: 16px;
	}

	@supports (contain: content) {
		contain: content;
	}

	@supports not (contain: content) {
		overflow: hidden;
	}
}

slot[name='icon'] {
	color: var(#{appearance.get-appearance-token(outline)});
	font-size: #{size.$vvd-size-super-condensed};
}

.text {
	display: flex;
	min-height: 24px;
	flex-direction: column;
	flex-grow: 1;
	align-items: flex-start;
	justify-content: center;
	gap: 4px;
	text-align: start;

	.headline {
		font: var(#{constants.$vvd-typography-base-bold});
	}

	.message {
		font: var(#{constants.$vvd-typography-base});
	}
}
