@use '../../../../shared/src/lib/sass/mixins/typography' as typography;
@use '../../../../../node_modules/@vonage/vivid-tokens/dist/sass/themes/consts' as theme-consts;

@use '../../../../shared/src/lib/sass/mixins/connotation/config' with (
	$connotations: accent,
	$shades: primary faint soft,
	$default: accent,
);
@use '../../../../shared/src/lib/sass/mixins/connotation' as connotation;

@use '../../../../shared/src/lib/sass/mixins/appearance/config' as appearance-config with (
	$appearances: ghost,
	$states: idle hover active selected,
	$default: ghost,
);
@use '../../../../shared/src/lib/sass/mixins/appearance' as appearance;


.base {
	$min-block-size: 40px;
	$gap: 8px;

	@include appearance.appearance;
	@include connotation.connotation;

	position: relative;
	display: inline-flex;
	box-sizing: border-box;
	align-items: center;
	background-color: var(#{appearance.get-appearance-token(fill)});
	border-radius: 6px;
	box-shadow: inset 0 0 0 1px var(#{appearance.get-appearance-token(outline)});
	color: var(#{appearance.get-appearance-token(text)});
	gap: $gap;
	hyphens: auto;
	inline-size: 100%;
	min-block-size: $min-block-size;
	padding-block: 10px;
	padding-inline: $gap;
	text-decoration: none;
	vertical-align: middle;
	word-break: break-word;
	cursor: pointer;

	@supports selector(:focus-visible) {
		&:focus {
			outline: none;
		}
	}

	.text {
		@include typography.typography-cat-shorthand('body-2');
	}
	.subtext {
		@include typography.typography-cat-shorthand('caption');
	}

	.meta {
		overflow: hidden;
		max-width: 20%;
		flex-shrink: 0;
		color: var(#{theme-consts.$vvd-color-neutral-70});
		margin-inline-start: auto;
		text-align: end;
		text-overflow: ellipsis;
		white-space: nowrap;
	}
}

.icon {
	font-size: 20px;
}
