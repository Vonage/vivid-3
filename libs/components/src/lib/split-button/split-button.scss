@use "../../../../../dist/libs/tokens/scss/tokens.constants" as constants;
@use "partials/variables" as variables;
@use "partials/mixins" as mixins;
@use "../focus/partials/variables" as focus-variables;

@use "../../../../shared/src/lib/sass/mixins/connotation/config" with (
	$connotations: accent cta,
	$shades: primary primary-text primary-increment contrast fierce firm soft faint,
	$default: accent
);
@use "../../../../shared/src/lib/sass/mixins/connotation" as connotation;

@use "../../../../shared/src/lib/sass/mixins/appearance/config" as appearance-config with (
	$appearances: filled outlined ghost,
	$states: idle hover disabled active,
	$default: ghost
);
@use "../../../../shared/src/lib/sass/mixins/appearance" as appearance;
@use "../../../../../dist/libs/tokens/scss/size.variables" as size;

.base {
	display: inline-flex;

	.control,
	.indicator {
		@include connotation.connotation(split-button);
		@include appearance.appearance;

		position: relative;
		display: inline-flex;
		box-sizing: border-box;
		align-items: center;
		justify-content: center;
		border: 0 none;
		margin: 0;
		background-color: var(#{appearance.get-appearance-token(fill)});
		block-size: var(#{variables.$block-size});
		color: var(#{appearance.get-appearance-token(text)});
		gap: var(#{variables.$icon-gap});
		vertical-align: middle;
		inline-size: 100%;

		@supports selector(:focus-visible) {
			&:focus {
				outline: none;
			}
		}

		@supports (user-select: none) {
			user-select: none;
		}

		/* Disabled */
		&:not(:disabled) {
			cursor: pointer;
		}

		&:disabled {
			cursor: not-allowed;
		}

		/* Appearance */
		&.appearance-outlined {
			border: 1px solid var(#{appearance.get-appearance-token(outline)});
		}

		/* Shape */
		&.control {
			border-right: 0.5px solid var(--vvd-color-neutral-100);
			&:not(.shape-pill) {
				border-radius: 6px 0 0 6px;
			}

			&.shape-pill {
				border-radius: 24px 0 0 24px;
			}
		}

		&.indicator {
			border-left: 0;
			&:not(.shape-pill) {
				border-radius: 0 6px 6px 0;
			}

			&.shape-pill {
				border-radius: 0 24px 24px 0;
			}
		}

		/* Size */
		&.size-super-condensed {
			@include mixins.get-size-properties(
				#{size.$vvd-size-super-condensed},
				#{constants.$vvd-typography-base-condensed-bold},
				4px,
				8px
			);

			&.indicator {
				width: #{size.$vvd-size-super-condensed};
			}
		}

		&.size-condensed {
			@include mixins.get-size-properties(
				#{size.$vvd-size-condensed},
				#{constants.$vvd-typography-base-condensed-bold},
				8px,
				12px
			);

			&.indicator {
				width: #{size.$vvd-size-condensed};
			}
		}

		&.size-expanded {
			@include mixins.get-size-properties(
				#{size.$vvd-size-expanded},
				#{constants.$vvd-typography-base-extended-bold},
				10px,
				20px
			);

			&.indicator {
				width: #{size.$vvd-size-expanded};
			}
		}

		&:not(.size-condensed, .size-expanded, .size-super-condensed) {
			@include mixins.get-size-properties(
				#{size.$vvd-size-normal},
				#{constants.$vvd-typography-base-bold},
				8px,
				16px
			);

			&.indicator {
				width: #{size.$vvd-size-normal};
			}
		}
	}
}

/* Icon */
.icon {
	line-height: 1;

	.icon-trailing & {
		order: 1;
	}

	.control > &,
	.indicator > & {
		font-size: calc(var(#{variables.$block-size}) / 2);
	}
}

.focus-indicator {
	:not(:focus-visible) > & {
		display: none;
	}

	.appearance-outlined & .appearance-ghost & {
		#{focus-variables.$focus-stroke-gap-color}: transparent;
	}
}
