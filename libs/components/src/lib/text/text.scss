
@use 'sass:list';
@use '../../../../shared/src/lib/sass/mixins/typography' as typography;
@use '../../../../../node_modules/@vonage/vivid-tokens/dist/sass/typography/web' as typography-scale;

@use '../../../../shared/src/lib/sass/mixins/connotation/config' with (
	$connotations: brand cta success alert announcement info,
	$shades: primary,
);
@use '../../../../shared/src/lib/sass/mixins/connotation' as connotation;

$font-faces: ();

@each $key, $value in typography-scale.$typography-category-list {
	$font-faces: list.join($font-faces, $key, $separator: comma)
}

@function get-default-selector($font-faces){
	$classes: ();

	@each $font-face in $font-faces {
		$classes: list.join($classes, '.font-face-#{$font-face}', $separator: comma)
	}

	@return '&:not(#{$classes})';
}

$default-selector: get-default-selector($font-faces);

%not-tight {
	&:not(.tight) {
		display: block;
		margin: var(--font-face-margin, 0);
	}
}

.control {
	@each $font-face in $font-faces {
		&.font-face-#{$font-face} {
			@include typography.typography-cat-shorthand(#{$font-face});
		}
	}

	#{$default-selector} {
		@include typography.typography-cat-shorthand('body-1');
	}

	@include connotation.connotation;

	color: var(#{connotation.get-connotation-token(primary)});

	&.font-face-headline-1,
	&.font-face-headline-2 {
		--font-face-margin: 2.5rem 0;
		@extend %not-tight;
	}

	&.font-face-title-1,
	&.font-face-title-2 {
		--font-face-margin: 2rem 0;
		@extend %not-tight;
	}

	&.font-face-subtitle-1,
	&.font-face-subtitle-2 {
		--font-face-margin: 1.5rem 0;
		@extend %not-tight;
	}

	#{$default-selector},
	&.font-face-body-1,
	&.font-face-body-1-bold,
	&.font-face-body-1-code,
	&.font-face-body-1-link,
	&.font-face-body-2,
	&.font-face-body-2-bold,
	&.font-face-body-2-code,
	&.font-face-body-2-link {
		--font-face-margin: 1rem 0;
		@extend %not-tight;
	}
}

::slotted(:where(h1, h2, h3, h4, h5, h6, p)) {
	margin: initial;
}


::slotted(*) {
	color: inherit;
	font: inherit;
}

