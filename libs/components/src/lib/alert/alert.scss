@use 'partials/variables' as variables;
@use '@repo/shared/mixins/border-radius' as border-radius-variables;
@use '@repo/tokens/scss/tokens.constants' as constants;
@use '@repo/shared/mixins/connotation/config' with (
	$connotations: accent success information alert warning announcement,
	$shades: primary primary-text,
	$default: accent
);
@use '@repo/shared/mixins/connotation' as connotation;
@use '@repo/shared/mixins/appearance/config' as appearance-config with (
	$appearances: filled,
	$default: filled
);
@use '@repo/shared/mixins/appearance' as appearance;
@use '@repo/tokens/scss/size.variables' as size;

$alert-transition-delay: --transition-delay;

.control {
	position: fixed;
	z-index: 10;
	border-radius: #{border-radius-variables.$border-radius-normal};
	inline-size: max-content;
	inset-block-end: 0;
	inset-inline: 0;
	margin-block: 16px;
	margin-inline: auto;
	max-inline-size: var(#{variables.$alert-max-inline-size}, fit-content);
	min-inline-size: var(#{variables.$alert-min-inline-size}, 420px);
	transition: opacity 150ms cubic-bezier(0, 0, 0.2, 1) 0ms,
		transform 150ms cubic-bezier(0, 0, 0.2, 1) 0ms;

	&.placement-top,
	&.placement-top-start,
	&.placement-top-end {
		inset-block: 0 auto;
	}

	&.placement-top-start,
	&.placement-bottom-start {
		right: auto;
		inset-inline-end: auto;
		margin-inline: 16px;
	}

	&.placement-top-end,
	&.placement-bottom-end {
		inset-inline-start: auto;
		margin-inline: 16px;
	}

	&:where(.strategy-static) {
		position: static;
		margin: 0;
		inline-size: auto;
	}

	&:not(.open) {
		opacity: 0;
		transform: scale(0.8);
	}

	&.open {
		opacity: 1;
		transform: scale(1);
	}

	@media (width <= 768px) {
		min-inline-size: var(#{variables.$alert-min-inline-size}, auto);
	}
}

.base {
	@include connotation.connotation(alert);
	@include appearance.appearance;

	& {
		display: flex;
		align-items: center;
		padding: 16px;
		border-radius: #{border-radius-variables.$border-radius-normal};
		background-color: var(#{constants.$vvd-color-neutral-50});
		color: var(#{constants.$vvd-color-canvas-text});
		column-gap: 16px;
	}

	.alert-text {
		margin-inline-end: auto;

		.headline {
			font: var(#{constants.$vvd-typography-base-bold});
			margin-block: 0 4px;
		}

		.main-text {
			font: var(#{constants.$vvd-typography-base});
		}

		.headline + ::slotted([slot='main'i]:first-child)::before,
		.main-text + ::slotted([slot='main'i]:first-child)::before {
			display: block;
			margin-top: 8px;
			content: '';
		}
	}

	slot[name='icon'] {
		flex-shrink: 0;
		color: var(#{appearance.get-appearance-token(fill)});
		font-size: 24px;
		line-height: 1;
	}

	.dismiss-button {
		border-left: 1px solid var(--vvd-color-neutral-200);
		padding-inline-start: 16px;
	}
}
