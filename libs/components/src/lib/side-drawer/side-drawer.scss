@use 'sass:map';

@use 'partials/variables' as variables;
@use '../../../../../node_modules/@vonage/vivid-tokens/dist/sass/themes/consts' as theme-consts;
@use '../../../../shared/src/lib/sass/mixins/typography' as typography;
@use '../../../../shared/src/lib/sass/mixins/scrim' as scrim-mixins;

$z-index-default: 6;
$padding-default: 16px;
$inline-size: var(#{variables.$side-drawer-inline-size}, 280px);


:host {
	display: flex;
	block-size: 100vh;
}

:host([position='end']) {
	flex-direction: row-reverse;
}

.control {
	position: fixed;
	z-index: var(#{variables.$side-drawer-z-index}, #{$z-index-default});
	top: auto;
	bottom: 0;
	display: flex;
	overflow: auto;
	flex-direction: column;
	flex-shrink: 0;
	background-color: var(#{variables.$side-drawer-background-color}, var(#{theme-consts.$vvd-color-canvas}));
	block-size: inherit;
	color: var(#{variables.$side-drawer-color}, var(#{theme-consts.$vvd-color-on-canvas}));
	inline-size: #{$inline-size};

	&.alternate {
		background-color: var(#{theme-consts.$vvd-color-canvas});
	}
	&:not(.open) {
		&.end {
			transform: translateX(100%);
		}
		&:not(.end) {
			transform: translateX(-100%);
		}
	}

	&.control.open:not(.modal) {
		+ .side-drawer-app-content {
			@include typography.typography-cat-shorthand(body-1);

			margin-inline-start: #{$inline-size};
		}
		&.end {
			+ .side-drawer-app-content {
				margin-inline-end: var(--side-drawer-inline-size, 280px);
				margin-inline-start: 0;
			}
		}
	}
	@media (prefers-reduced-motion: no-preference) {
		transition: transform 0.2s cubic-bezier(0.4, 0, 0.2, 1);
	}
}

.side-drawer-header {
	@include typography.typography-cat-shorthand(subtitle-1);

	$gutter: var(#{variables.$side-drawer-padding-header}, #{$padding-default});

	display: flex;
	height: 64px;
	flex-shrink: 0;
	align-items: center;
	padding-inline-end: #{$gutter};
	padding-inline-start: #{$gutter};

	:not(.withHeader) &{
		display: none;
	}
}

.side-drawer-content {
	$gutter: var(#{variables.$side-drawer-padding-body}, #{$padding-default});

	background-color: inherit;
	padding-block: 12px;
	overflow-y: auto;
	padding-inline-end: #{$gutter};
	padding-inline-start: #{$gutter};

  @supports(overscroll-behavior: contain) {
    overscroll-behavior: contain;
  }
}

.modal {
	&:not(.end) {
		inset-inline-start: 0;
	}
	&.end {
		inset-inline-end: 0;
	}
}

.scrim {
	@include scrim-mixins.scrim-variables;

	position: fixed;
	z-index: calc(#{variables.$side-drawer-z-index} - 1);
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	&:not(.open) {
		display: none;
	}
}
