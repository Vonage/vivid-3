@use '@repo/shared/mixins/focus' as focus;
@use '@repo/shared/mixins/focus' as focus-variables;
@use 'partials/variables' as variables;
@use '@repo/shared/mixins/border-radius' as border-radius-variables;
@use '@repo/shared/utils' as utils;
@use '@repo/shared/mixins/connotation/config' with (
	$connotations: accent cta,
	$shades: firm-all pale fierce faint soft,
	$default: accent
);
@use '@repo/shared/mixins/connotation' as connotation;
@use '@repo/shared/mixins/appearance/config' as appearance-config with (
	$appearances: duotone,
	$states: idle hover selected selectedAndHover,
	$default: duotone
);
@use '@repo/shared/mixins/appearance' as appearance;

:host {
	display: flex;
}

.base {
	@include connotation.connotation(selectable-box);
	@include appearance.appearance;

	--control-offset: calc(var(#{variables.$spacing-var}, 16px) + 36px);

	& {
		position: relative;
		padding: var(#{variables.$spacing-var}, 16px);
		border: 1px solid var(#{appearance.get-appearance-token(outline)});
		border-radius: #{border-radius-variables.$border-radius-normal};
		background-color: var(#{appearance.get-appearance-token(fill)});
		inline-size: 100%;
		text-align: start;
	}

	&.control-placement-end-stacked,
	&.control-placement-start-stacked {
		padding-block-start: var(--control-offset);
	}
	&.control-placement-start {
		padding-inline-start: var(--control-offset);
	}
	&.control-placement-end {
		padding-inline-end: var(--control-offset);
	}

	&:focus-visible {
		#{focus-variables.$focus-stroke-gap-color}: transparent;

		@include focus.focus;
	}

	&.tight {
		overflow: hidden;
		min-height: calc(var(#{variables.$spacing-var}, 16px) * 2 + 22px);
		padding: 0;
	}

	&.selected {
		background-color: var(
			#{variables.$selected-bg-var},
			var(#{appearance.get-appearance-token(fill)})
		);
	}

	&.clickable {
		cursor: pointer;
	}
}

.control {
	position: absolute;
	inset-block-start: var(#{variables.$spacing-var}, 16px);
	&.start-stacked,
	&.start {
		inset-inline-start: var(#{variables.$spacing-var}, 16px);
	}
	&.end-stacked,
	&.end {
		inset-inline-end: var(#{variables.$spacing-var}, 16px);
	}
}
