@use "../focus/partials/variables" as focus-variables;
@use "partials/variables" as variables;

@use "../../../../shared/src/lib/sass/utils" as utils;
@use "../../../../shared/src/lib/sass/mixins/connotation/config" with (
	$connotations: accent cta,
	$shades: firm pale soft,
	$default: accent
);
@use "../../../../shared/src/lib/sass/mixins/connotation" as connotation;

@use "../../../../shared/src/lib/sass/mixins/appearance/config" as appearance-config with (
	$appearances: selectablebox,
	$states: idle hover checked checkedAndHover,
	$default: selectablebox
);
@use "../../../../shared/src/lib/sass/mixins/appearance" as appearance;

@supports selector(:focus-visible) {
	.base:focus-visible {
		outline: none;
	}
}

:host {
	display: flex;
}

.base {
	@include connotation.connotation(selectable-box);
	@include appearance.appearance;

	#{variables.$spacing-unit}: 16px;

	position: relative;
	padding: var(#{variables.$spacing-unit});
	border: 1px solid var(#{appearance.get-appearance-token(outline)});
	background-color: var(#{appearance.get-appearance-token(fill)});
	border-radius: 6px;
	inline-size: 100%;
	padding-block-start: calc(var(#{variables.$spacing-unit}) + 36px);
	text-align: start;

	&.spacing-small {
		#{variables.$spacing-unit}: 8px;
	}

	&.tight {
		overflow: hidden;
		min-height: calc(var(#{variables.$spacing-unit}) * 2 + 22px);
		padding: 0;
	}

	&.clickable {
		cursor: pointer;
	}
}

.focus-indicator {
	#{focus-variables.$focus-stroke-gap-color}: transparent;
	#{focus-variables.$focus-inset}: -1px;

	pointer-events: none;

	.base:not(:focus-visible) > & {
		display: none;
	}
}

.control {
	position: absolute;
	inset-block-start: var(#{variables.$spacing-unit});
	inset-inline-end: var(#{variables.$spacing-unit});
}