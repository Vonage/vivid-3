@use "../focus/partials/variables" as focus-variables;

@use "../../../../shared/src/lib/sass/utils" as utils;
@use "../../../../shared/src/lib/sass/mixins/connotation/config" with (
	$connotations: accent cta,
	$shades: firm soft faint,
	$default: accent
);
@use "../../../../shared/src/lib/sass/mixins/connotation" as connotation;

@use "../../../../shared/src/lib/sass/mixins/appearance/config" as appearance-config with (
	$appearances: outlined,
	$states: idle hover active,
	$default: outlined
);
@use "../../../../shared/src/lib/sass/mixins/appearance" as appearance;

@supports selector(:focus-visible) {
	.base:focus-visible {
		outline: none;
	}
}

:host {
	display: flex;
}

.base {
	@include connotation.connotation(selectable-box);
	@include appearance.appearance;

	--_sizing-unit: 16px;

	position: relative;
	min-height: calc(var(--_sizing-unit) * 2 + 22px);
	padding: var(--_sizing-unit);
	border: 1px solid var(#{appearance.get-appearance-token(outline)});
	background-color: var(#{appearance.get-appearance-token(fill)});
	border-radius: 6px;
	inline-size: 100%;
	padding-block-start: calc(var(--_sizing-unit) + 36px);
	text-align: start;

	&.size-condensed {
		--_sizing-unit: 8px;
	}

	&.tight {
		padding: 0;
	}

	&.clickable {
		cursor: pointer;
	}
}

.base:not(.clickable):not(.active) {
	&:hover {
		background-color: transparent;
	}

	&:active {
		background-color: transparent;
	}
}

.focus-indicator {
	#{focus-variables.$focus-stroke-gap-color}: transparent;

	.base:not(:focus-visible) > & {
		display: none;
	}
}

.control {
	position: absolute;
	inset-block-start: var(--_sizing-unit);
	inset-inline-end: var(--_sizing-unit);

	&.checkbox {
		inset-inline-end: calc(var(--_sizing-unit) - 8px);
	}
}