@use "../../../../../dist/libs/tokens/scss/tokens.constants" as constants;
@use "partials/variables" as variables;
@use "partials/mixins" as mixins;
@use "../focus/partials/variables" as focus-variables;

@use "../../../../shared/src/lib/sass/mixins/connotation/config" with (
	$connotations: accent cta,
	$shades: contrast soft pale fierce firm faint,
	$default: accent
);
@use "../../../../shared/src/lib/sass/mixins/connotation" as connotation;

@use "../../../../shared/src/lib/sass/mixins/appearance/config" as appearance-config with (
	$appearances: subtle duotone,
	$states: idle hover active disabled selected,
	$default: subtle
);
@use "../../../../shared/src/lib/sass/mixins/appearance" as appearance;
@use "../../../../../dist/libs/tokens/scss/size.variables" as size;

.base {
	@include connotation.connotation;
	@include appearance.appearance;

	#{variables.$tag-block-size}: #{size.$vvd-size-ultra-condensed};

	display: inline-flex;
	box-sizing: border-box;
	align-items: center;
	background-color: var(#{appearance.get-appearance-token(fill)});
	block-size: var(#{variables.$tag-block-size});
	box-shadow: inset 0 0 0 1px var(#{appearance.get-appearance-token(outline)});
	color: var(#{appearance.get-appearance-token(text)});
	column-gap: 8px;
	font: var(#{constants.$vvd-typography-base});
	max-inline-size: 100%;
	vertical-align: middle;

	@supports selector(:focus-visible) {
		&:focus {
			outline: none;
		}
	}

	@supports (user-select: none) {
		user-select: none;
	}

	&:not(.disabled) {
		cursor: pointer;
	}

	&.disabled {
		cursor: not-allowed;
		pointer-events: none;
	}

	/* Size */
	&.size-condensed {
		@include mixins.get-size-properties(
			#{size.$vvd-size-ultra-condensed},
			#{constants.$vvd-typography-base-condensed},
			4px
		);
	}

	&.size-expanded {
		@include mixins.get-size-properties(
			#{size.$vvd-size-extra-condensed},
			#{constants.$vvd-typography-base-extended},
			16px
		);
	}

	&:not(.size-condensed, .size-expanded) {
		@include mixins.get-size-properties(#{size.$vvd-size-super-condensed}, #{constants.$vvd-typography-base}, 8px);
	}

	&.removable {
		cursor: auto;
		padding-inline-end: 2px;
	}
}

.label {
	overflow: hidden;
	max-inline-size: 100%;
	text-overflow: ellipsis;
	white-space: nowrap;
}

/* Shape */

.base:not(.shape-pill) {
	border-radius: 4px;
}
.base.shape-pill {
	border-radius: 14px;
}

/* Icon */
.icon {
	font-size: calc(var(#{variables.$tag-block-size}) / 1.6667);
	line-height: 1;
}

/* Dismiss button */
.dismiss-button {
	display: flex;
	align-items: center;
	border-radius: 6px;
	cursor: pointer;

	.dismiss-icon {
		margin: 4px;
		font-size: calc(var(#{variables.$tag-block-size}) / 1.6667);
	}

	&:hover {
		background-color: var(#{constants.$vvd-color-neutral-100});
	}
}

.focus-indicator {
	.base:not(:focus-visible) & {
		display: none;
	}
}
