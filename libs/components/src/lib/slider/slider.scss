@use '../../../../../dist/libs/tokens/scss/constants' as constants;
// @use '../../../../shared/src/lib/sass/mixins/connotation' as connotation;

// @use '../../../../shared/src/lib/sass/mixins/appearance/config' as appearance-config with (
// 	$appearances: fieldset,
// 	$states: idle hover disabled readonly,
// 	$default: fieldset,
// );
// @use '../../../../shared/src/lib/sass/mixins/appearance' as appearance;

$thumb-size: 18px;
$ring-size: 44px;
$track-thickness: 4px;

:host {
	display: inline-block;
	width: 100%;
}

:host([orientation="vertical"]) {
	height: $thumb-size * 10;
}

.control {
	// @include connotation.connotation;
	// @include appearance.appearance;

	user-select: none;
	outline: none;
	cursor: pointer;
	height: $thumb-size * 2;

	&[aria-orientation="horizontal"] {
		touch-action: pan-y;
		min-width: $thumb-size;
		width: 100%;
		
		& .track {
			right: 0;
			left: 0;
			top: calc($thumb-size - $track-thickness / 2);
			height: $track-thickness;
		}

		& .thumb-container {
			transform: translateX(calc($thumb-size / 2))
				translateY(calc($thumb-size / 2));
		}
	}

	&[aria-orientation="vertical"] {
		touch-action: pan-x;
		min-height: $thumb-size;
		height: 100%;
		
		& .positioning-region {
			height: 100%;
		}

		& .track {
			width: $track-thickness;
			left: calc($thumb-size - $track-thickness / 2);
			height: 100%;
		}

		& .track-start {
			height: auto;
			width: 100%;
			top: 0;
		}

		& .thumb-container {
			transform: translateX(calc($thumb-size / 2))
				translateY(calc($thumb-size / 2));
		}
	}
	
	& .positioning-region {
		position: relative;
	}
}	

.track {
	background: var(#{constants.$vvd-color-neutral-300});
	position: absolute;
	border-radius: 4px;
}

.track-start {
	background: var(#{constants.$vvd-color-canvas-text});
	position: absolute;
	height: 100%;
	left: 0;
	border-radius: 4px;
}

.focus-ring {
	width: 44px;
	height: 44px;
	background-color: var(#{constants.$vvd-color-neutral-100});
	border-radius: 50%;
	position: absolute;
	transform: translateX(22px) translateY(-2px);
	z-index: -1;
	display: none;

	&:hover {
		display: block;
	}
}	

.thumb-container {
	position: absolute;
	height: $thumb-size;
	width: $thumb-size;
	background: var(#{constants.$vvd-color-canvas-text});
	border-radius: calc($thumb-size / 2);

	&:hover::after {
		width: $ring-size;
		height: $ring-size;
		background-color: var(#{constants.$vvd-color-canvas-text});
		opacity: 0.12;
		border-radius: 50%;
		display: block;
		position: relative;
		left: calc(($ring-size - $thumb-size) / -2);
		top: calc(($ring-size - $thumb-size) / -2);
		content: '';
	}	
}
