@use '../focus/partials/variables' as focus-variables;
@use '../../../../../dist/libs/tokens/scss/constants' as constants;

@use '../../../../shared/src/lib/sass/mixins/appearance/config' as appearance-config with (
	$appearances: fieldset,
	$states: idle disabled readonly,
	$default: fieldset,
);
@use '../../../../shared/src/lib/sass/mixins/appearance' as appearance;

$thumb-size: 18px;
$ring-size: 44px;
$track-thickness: 4px;

:host {
	display: inline-block;
	width: 100%;
}

:host([orientation="vertical"]) {
	height: 100%;
}

.control {
	@include appearance.appearance;

	height: $ring-size;
	cursor: pointer;
	outline: none;
	user-select: none;

	@supports selector(:focus-visible) {
		&:focus {
			outline: none;
		}
	}

	&.disabled {
		cursor: not-allowed;
	}

	& .positioning-region {
		position: relative;
	}

	& .track {
		position: absolute;
		background: var(#{constants.$vvd-color-neutral-300});
		border-radius: 4px;
	
		& .track-start {
			position: absolute;
			left: 0;
			height: 100%;
			background: var(#{appearance.get-appearance-token(text)});
			border-radius: 4px;
		}
	}

	& .thumb-container {
		position: absolute;
		width: $ring-size;
		height: $ring-size;
	
		&::before {
			position: absolute;
			display: block;
			width: $ring-size;
			height: $ring-size;
			background-color: var(#{constants.$vvd-color-canvas-text});
			border-radius: 50%;
			content: '';
			opacity: 0;
			transition: opacity 0.4s ease-out 0s;
		}
	
		:host(:not(.disabled)) &:hover::before {
			opacity: 0.12;
		}
	
		:host(:not(.disabled)) &:active::before {
			opacity: 0.25;
		}
	
		&::after {
			position: absolute;
			top: calc(($ring-size - $thumb-size) / 2);
			left: calc(($ring-size - $thumb-size) / 2);
			display: block;
			width: $thumb-size;
			height: $thumb-size;
			background-color: var(#{appearance.get-appearance-token(text)});
			border-radius: 50%;
			content: '';
		}
	}
		
	&[aria-orientation="horizontal"] {
		width: calc(100% - $thumb-size);
		min-width: $thumb-size;
		margin-left: calc($thumb-size / 2);
		touch-action: pan-y;
		
		& .track {
			top: calc(($ring-size - $track-thickness) / 2);
			right: 0;
			left: 0;
			height: $track-thickness;

			& .mark {
				width: 100%;
				height: 4px;
			}
		}

		& .thumb-container {
			transform: translateX(calc($ring-size / 2));
		}
	}

	&[aria-orientation="vertical"] {
		height: calc(100% - $thumb-size);
		min-height: $thumb-size;
		margin-top: calc($thumb-size / 2);
		touch-action: pan-x;
		
		& .positioning-region {
			height: 100%;
		}

		& .track {
			left: calc(($ring-size - $track-thickness) / 2);
			width: $track-thickness;
			height: 100%;

			& .mark {
				width: 4px;
				height: 100%;
			}
		}

		& .track-start {
			top: 0;
			width: 100%;
			height: auto;
		}

		& .thumb-container {
			transform: translateY(calc($ring-size / 2));
		}
	}
}	

:host(.disabled) .control .track {
	background: var(#{constants.$vvd-color-neutral-100});
}

.focus-indicator {
	#{focus-variables.$focus-inset}: -3px;
	#{focus-variables.$focus-stroke-gap-color}: transparent;

	border-radius: 50%;

	.control:not(:focus-visible) & {
		display: none;
	}
}
