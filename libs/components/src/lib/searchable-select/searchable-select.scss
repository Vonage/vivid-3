@use '@repo/tokens/scss/tokens.constants' as constants;
@use '@repo/shared/mixins/connotation/config' with (
	$connotations: accent,
	$shades: primary primary-text primary-increment intermediate faint soft firm
		fierce,
	$default: accent
);
@use '@repo/shared/mixins/connotation' as connotation;
@use '@repo/shared/mixins/appearance/config' as appearance-config with (
	$appearances: fieldset ghost,
	$states: idle hover disabled readonly error success,
	$default: fieldset
);
@use '@repo/shared/mixins/appearance' as appearance;
@use '@repo/tokens/scss/size.variables' as size;
@use '@repo/shared/mixins/focus' as focus;
@use '@repo/shared/mixins/focus' as focus-variables;
@use 'partials/variables' as variables;
@use '@repo/shared/mixins/border-radius' as border-radius-variables;
@use '../../shared/patterns/chevron' as chevron;
@use '../../shared/patterns/form-elements/with-contextual-help' as
	contextual-help;

$low-ink-color: --_low-ink-color;

@include chevron.chevron;
@include chevron.chevron-clickable($low-ink-color);

:host(:focus-visible) {
	outline: none;
}

:host {
	display: inline-block;
	inline-size: 300px;
	#{$low-ink-color}: var(#{constants.$vvd-color-neutral-600});
}

:host([disabled]) {
	#{$low-ink-color}: var(#{constants.$vvd-color-neutral-400});
	cursor: not-allowed;
}

.control-wrapper {
	display: flex;
	flex-direction: column;
	gap: 4px;
}

.label {
	color: var(#{constants.$vvd-color-canvas-text});
	font: var(#{constants.$vvd-typography-base});
}

.selection-count {
	color: var(#{$low-ink-color});
	font: var(#{constants.$vvd-typography-base});
}

.fieldset {
	@include connotation.connotation(searchable-select);
	@include appearance.appearance;

	& {
		display: flex;
		align-items: center;
		justify-content: space-between;
		background-color: var(#{appearance.get-appearance-token(fill)});
		box-shadow: inset 0 0 0 1px var(#{appearance.get-appearance-token(outline)});
		color: var(#{appearance.get-appearance-token(text)});
		font: var(#{constants.$vvd-typography-base});
		gap: 8px;
		padding-block: 8px;
		padding-inline: 16px;
		transition: box-shadow 0.2s, background-color 0.2s;
	}

	@supports selector(:has(*)) {
		&:not(.has-highlighted-option):has(input:focus) {
			@include focus.focus;
			#{focus-variables.$focus-stroke-gap-color}: transparent;
		}
	}

	@supports not selector(:has(*)) {
		&:not(.has-highlighted-option):focus-within {
			@include focus.focus;
			#{focus-variables.$focus-stroke-gap-color}: transparent;
		}
	}

	/* Shape */
	:host(:not([shape='pill'])) & {
		border-radius: #{border-radius-variables.$border-radius-normal};
	}

	:host([shape='pill']) & {
		border-radius: #{border-radius-variables.$border-radius-extra-expanded};
	}
}

.popup-wrapper {
	position: relative;
}

.content-area {
	display: flex;
	overflow: hidden;
	flex: 1;
	flex-direction: column;
	gap: 8px;
	min-block-size: 24px;
}

.tag-row {
	display: flex;
	gap: 8px;
	inline-size: 100%;

	&.contains-only-input:not(:focus-within) {
		display: contents;
	}
}

.tag-wrapper {
	overflow: hidden;
}

.tag {
	max-inline-size: 100%;
}

input {
	box-sizing: border-box;
	flex: 1;
	border: none;
	background: none;
	block-size: 24px;
	font: var(#{constants.$vvd-typography-base});
	max-inline-size: 100%;
	min-inline-size: min(100px, 40%);
	outline: none;

	.contains-only-input &:not(:focus) {
		position: absolute;
		block-size: 0;
		inline-size: 0;
		min-inline-size: 0;
		opacity: 0;
		pointer-events: none;
	}
}

.listbox {
	display: flex;
	flex-direction: column;
	padding: 4px;
	gap: 2px;
	max-block-size: var(variables.$searchable-select-height, 408px);
	overflow-y: auto;
}

.empty-message {
	display: flex;
	align-items: center;
	justify-content: center;
	color: var(#{constants.$vvd-color-neutral-300});
	font: var(#{constants.$vvd-typography-base});
	min-block-size: 40px;
	text-align: center;
}

::part(popup-base) {
	inline-size: max-content;
	min-inline-size: var(#{variables.$searchable-select-fixed-width}, 100%);
}

slot[name='icon'] {
	font-size: 20px;
}

.visually-hidden {
	position: absolute;
	overflow: hidden;
	width: 1px;
	height: 1px;
	clip: rect(0 0 0 0);
	clip-path: inset(50%);
	white-space: nowrap;
}

::slotted([data-vvd-component='option'][data-highlighted]),
[data-select-all][data-highlighted] {
	border-radius: #{border-radius-variables.$border-radius-normal};

	@include focus.focus;
	#{focus-variables.$focus-stroke-gap-color}: transparent;
}

.divider{
	margin-block: 10px;
	margin-inline: 12px;
}

@include contextual-help.label-wrapper;
