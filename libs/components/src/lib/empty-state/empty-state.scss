@use 'partials/variables' as variables;
@use '../../../../../dist/libs/tokens/scss/tokens.constants' as constants;
@use '../../../../shared/src/lib/sass/mixins/border-radius' as
	border-radius-variables;
@use '../../../../shared/src/lib/sass/mixins/connotation/config' with (
	$connotations: accent cta success alert warning information announcement,
	$shades: firm-all dim faint,
	$default: accent
);
@use '../../../../shared/src/lib/sass/mixins/connotation' as connotation;

:host {
	display: block;
}

.base {
	@include connotation.connotation(empty-state);

	& {
		#{variables.$empty-state-icon-container}: 120px;
		#{variables.$empty-state-icon-background}: var(
				#{connotation.get-connotation-token(faint)}
		);
		#{variables.$empty-state-icon-font-size}: 52px;

		display: flex;
		box-sizing: border-box;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		block-size: 100%;
		gap: 24px;
	}
}

.icon-container {
	display: flex;
	align-items: center;
	justify-content: center;
	border-radius: #{border-radius-variables.$border-radius-full};
	background-color: var(#{variables.$empty-state-icon-background});
	block-size: var(#{variables.$empty-state-icon-container});
	font-size: var(#{variables.$empty-state-icon-font-size});
	inline-size: var(#{variables.$empty-state-icon-container});

	.icon-decoration-outlined & {
		#{variables.$empty-state-icon-background}: transparent;
		#{variables.$empty-state-icon-font-size}: 40px;

		box-shadow: inset 0 0 0 21px
			var(#{connotation.get-connotation-token(faint)});
	}

	.icon {
		color: var(#{connotation.get-connotation-token(firm-all)});

		.icon-decoration-outlined & {
			padding: 19px;
			border: 1px solid var(#{connotation.get-connotation-token(dim)});
			border-radius: inherit;
		}
	}
}

.content {
	display: flex;
	flex-direction: column;
	color: var(#{constants.$vvd-color-canvas-text});
	font: var(#{constants.$vvd-typography-base});
	gap: 8px;
	text-align: center;
}

header {
	color: var(#{connotation.get-connotation-token(firm-all)});
	font: var(#{constants.$vvd-typography-base-extended-bold});
}

.actions {
	display: flex;
	flex-wrap: wrap;
	align-items: center;
	justify-content: center;
	gap: 8px;

	.base.no-actions & {
		display: none;
	}
}
