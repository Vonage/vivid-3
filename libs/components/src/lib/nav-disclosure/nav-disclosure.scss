@use 'sass:map';
@use '../../../../../dist/libs/tokens/scss/tokens.constants' as constants;
@use '../../../../shared/src/lib/sass/mixins/focus' as focus;
@use '../../../../shared/src/lib/sass/mixins/focus' as focus-variables;
@use '../../../../shared/src/lib/sass/mixins/connotation/config' with (
	$connotations: accent cta,
	$shades: primary primary-text primary-increment faint soft contrast fierce
		firm,
	$default: cta
);
@use '../../../../shared/src/lib/sass/mixins/connotation' as connotation;
@use '../../../../shared/src/lib/sass/mixins/appearance/config' as
	appearance-config with (
	$appearances: ghost-light,
	$states: idle hover active selected selectedAndHover,
	$default: ghost-light
);
@use '../../../../shared/src/lib/sass/mixins/appearance' as appearance;
@use '../../../../../dist/libs/tokens/scss/size.variables' as size;
@use '../../../../shared/src/lib/sass/mixins/border-radius' as
	border-radius-variables;

.control {
	@include connotation.connotation(nav-disclosure);
	@include appearance.appearance(
		appearance.state-selectors(
			map.merge(
				appearance.$state-aspect-selectors,
				(
					selected: '[aria-current]',
				)
			)
		)
	);

	$min-block-size: #{size.$vvd-size-normal};
	$gap: 12px;
	$gutter: 16px;

	display: flex;
	box-sizing: border-box;
	align-items: center;
	border-radius: #{border-radius-variables.$border-radius-normal};
	background-color: var(#{appearance.get-appearance-token(fill)});
	box-shadow: inset 0 0 0 1px var(#{appearance.get-appearance-token(outline)});
	color: var(#{appearance.get-appearance-token(text)});
	cursor: pointer;
	font: var(#{constants.$vvd-typography-base});
	gap: $gap;
	hyphens: auto;
	inline-size: 100%;
	min-block-size: $min-block-size;
	padding-block: 10px;
	padding-inline: $gutter;
	text-decoration: none;
	vertical-align: middle;

	&:focus-visible {
		@include focus.focus;
	}
	:host(:where([aria-current='true'][open])) &,
	:host(:not([aria-current='true'])) & {
		#{focus-variables.$focus-stroke-gap-color}: transparent;
	}

	@supports (user-select: none) {
		user-select: none;
	}

	.toggleIcon {
		margin-inline-start: auto;
	}
}

slot[name='icon'] {
	font-size: 20px;
	line-height: 1;
}

.content {
	display: flex;
	flex-direction: column;
	border-inline-start: 1px solid var(#{constants.$vvd-color-neutral-200});
	gap: 4px;
	margin-block: 4px;
	margin-inline-start: 20px;
	padding-inline-start: 12px;
}

details > summary {
	list-style: none;
}

details > summary::-webkit-details-marker {
	display: none;
}
