@use '@repo/tokens/scss/tokens.constants' as constants;
@use 'partials/variables' as variables;
@use 'partials/mixins' as mixins;
@use '@repo/shared/mixins/connotation/config' with (
	$connotations: accent cta,
	$shades: primary primary-text firm firm-all fierce pale soft contrast,
	$default: accent
);
@use '@repo/shared/mixins/connotation' as connotation;
@use '@repo/shared/mixins/appearance/config' as appearance-config with (
	$appearances: filled outlined duotone subtle,
	$states: idle,
	$default: filled
);
@use '@repo/shared/mixins/appearance' as appearance;
@use '@repo/tokens/scss/size.variables' as size;
@use '@repo/shared/mixins/border-radius' as border-radius-variables;
@use '@repo/shared/mixins/focus' as focus;
@use '@repo/shared/mixins/focus' as focus-variables;

:host {
	display: inline-block;
}

.base {
	@include connotation.connotation(avatar);
	@include appearance.appearance;
	& {
		display: inline-flex;
		overflow: hidden;
		align-items: center;
		justify-content: center;
		border: none;
		border-radius: var(#{variables.$avatar-border-radius});
		background-color: var(#{appearance.get-appearance-token(fill)});
		block-size: var(#{variables.$avatar-size});
		box-shadow: inset 0 0 0 1px var(#{appearance.get-appearance-token(outline)});
		color: var(#{appearance.get-appearance-token(text)});
		inline-size: var(#{variables.$avatar-size});
		vertical-align: middle;
	}

	&.size-condensed {
		@include mixins.get-size-properties(
			#{size.$vvd-size-condensed},
			#{constants.$vvd-typography-base-condensed-bold}
		);
	}

	&.size-expanded {
		@include mixins.get-size-properties(
			#{size.$vvd-size-expanded},
			#{constants.$vvd-typography-heading-4}
		);
	}

	&:is(a, button) {
		cursor: pointer;
		#{focus-variables.$focus-stroke-gap-color}: transparent;
	}

	&:not(.shape-pill) {
		#{variables.$avatar-border-radius}: #{border-radius-variables.$border-radius-normal};
		&.size-condensed {
			#{variables.$avatar-border-radius}: #{border-radius-variables.$border-radius-semi-condensed};
		}
	}

	&:not(.size-condensed, .size-expanded) {
		@include mixins.get-size-properties(
			#{size.$vvd-size-normal},
			#{constants.$vvd-typography-base-extended-bold}
		);
	}

	&:is(a, button):focus-visible {
		@include focus.focus;
	}

	&.shape-pill {
		#{variables.$avatar-border-radius}: #{border-radius-variables.$border-radius-full};
	}

	.initials {
		text-transform: uppercase;
	}

	::slotted([slot='graphic']) {
		block-size: 100%;
		inline-size: 100%;
		object-fit: cover;
	}
}
