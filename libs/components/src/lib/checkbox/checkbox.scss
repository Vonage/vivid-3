@use '../focus/partials/variables' as focus-variables;
@use '../../../../shared/src/lib/sass/mixins/typography' as typography;
@use '../../../../../node_modules/@vonage/vivid-tokens/dist/sass/themes/consts' as theme-consts;

@use '../../../../shared/src/lib/sass/mixins/connotation/config' with (
	$connotations: accent,
	$shades: primary on-primary,
	$default: accent,
);
@use '../../../../shared/src/lib/sass/mixins/connotation' as connotation;

@use '../../../../shared/src/lib/sass/mixins/appearance/config' as appearance-config with (
	$appearances: fieldset,
	$states: idle hover checked disabled readonly indeterminate,
	$default: fieldset,
);
@use '../../../../shared/src/lib/sass/mixins/appearance' as appearance;

$size: 24px;
$gutter: 4px;

.base {
	@include connotation.connotation;
	@include appearance.appearance;

	display: inline-flex;
	align-items: center;
	gap: 12px;
	@supports selector(:focus-visible) {
		&:focus {
			outline: none;
		}
	}

	@supports (user-select: none) {
		user-select: none;
	}
}

.control {
	position: relative;
	display: inline-flex;
	width: $size;
	height: $size;
	align-items: center;
	justify-content: center;
	background-color: var(#{appearance.get-appearance-token(fill)});
	border-radius: 3px;
	box-shadow: inset 0 0 0 2px var(#{appearance.get-appearance-token(outline)});
	color: var(#{appearance.get-appearance-token(text)});
	cursor: pointer;
}

.indicator {
	font-size: calc($size - $gutter * 2);

	@at-root .base:not(.checked) #{&}.checkmark {
		display: none;
	}

	&.minus {
		@at-root
		.base:not(.indeterminate) &,
		.base.checked & {
			display: none;
		}
	}
}

label {
	@include typography.typography-cat-shorthand(body-2);

	color: var(#{theme-consts.$vvd-color-on-canvas});
	cursor: pointer;
}

.focus-indicator {
	#{focus-variables.$focus-inset}: -3px;
	#{focus-variables.$focus-stroke-gap-color}: transparent;

	border-radius: 6px;

	.base:not(:focus-visible) & {
		display: none;
	}
}
