@use '../focus/partials/variables' as focus-variables;

@use '../../../../shared/src/lib/sass/mixins/connotation/config' with (
	$connotations: accent,
	$shades: primary on-primary,
	$default: accent,
);
@use '../../../../shared/src/lib/sass/mixins/connotation' as connotation;

@use '../../../../shared/src/lib/sass/mixins/appearance/config' as appearance-config with (
	$appearances: fieldset,
	$states: idle hover checked disabled readonly,
	$default: fieldset,
);
@use '../../../../shared/src/lib/sass/mixins/appearance' as appearance;

$size: 24px;
$gutter: 4px;

.control {
	@include connotation.connotation;
	@include appearance.appearance;

	outline: 0 none;
  position: relative;
	display: inline-flex;
  justify-content: center;
  align-items: center;
	width: $size;
	height: $size;
	background-color: var(#{appearance.get-appearance-token(fill)});
	border-radius: 3px;
	box-shadow: inset 0 0 0 2px var(#{appearance.get-appearance-token(outline)});
	color: var(#{appearance.get-appearance-token(text)});
	cursor: pointer;
}

.indicator {
  font-size: calc($size - $gutter * 2);

  @at-root .control:not(.checked) > #{&}.checkmark {
    display: none;
  }

  &.minus {
    @at-root
    .control:not(.indeterminate) > &,
    .control.checked > & {
      display: none;
    }
  }
}

.focus-indicator {
  #{focus-variables.$focus-inset}: -3px;
  #{focus-variables.$focus-stroke-gap-color}: transparent;
  border-radius: 6px;

	:not(:focus-visible) & {
		display: none;
	}
}
