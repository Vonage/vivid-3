@use "partials/variables" as variables;
@use "../focus/partials/variables" as focus-variables;
@use "../../../../shared/src/lib/sass/mixins/connotation/config" with (
	$connotations: accent,
	$shades: backdrop intermediate primary soft,
	$default: accent
);
@use "../../../../shared/src/lib/sass/mixins/connotation" as connotation;

@use "../../../../shared/src/lib/sass/mixins/appearance/config" as appearance-config with (
	$appearances: fieldset ghost,
	$states: idle disabled,
	$default: fieldset
);
@use "../../../../shared/src/lib/sass/mixins/appearance" as appearance;
@use "../../../../shared/src/lib/sass/mixins/border-radius" as border-radius-variables;

:host {
	display: inline-block;
	inline-size: fit-content;
}

:host(:focus-within) {
	outline: none;
}

:host([disabled]) {
	cursor: not-allowed;
}

.base {
	@include connotation.connotation(listbox);
	@include appearance.appearance;

	position: relative;
	display: inline-flex;
	box-sizing: border-box;
	padding: 4px;
	background-color: var(#{appearance.get-appearance-token(fill)});
	border-radius: var(#{variables.$listbox-border-radius});
	box-shadow: inset 0 0 0 1px var(#{appearance.get-appearance-token(outline)});
	contain: paint;
	gap: 4px;
	inline-size: 100%;

	&:not(.orientation-horizontal) {
		flex-direction: column;
	}
}

.focus-indicator {
	pointer-events: none;

	:host(:not(:focus-within)) & {
		display: none;
	}
}

/* Shape */
.base:not(.shape-pill) {
	#{variables.$listbox-border-radius}: #{border-radius-variables.$border-radius-normal};
}

.base.shape-pill {
	#{variables.$listbox-border-radius}: #{border-radius-variables.$border-radius-extra-expanded};
}

::slotted([role="option"]) {
	border-radius: var(#{variables.$listbox-border-radius});
	contain: content;
}

.base.disabled ::slotted([role="option"]) {
	#{variables.$option-appearance-color-text}: var(#{appearance.get-appearance-token(outline)});

	pointer-events: none;
}
