@use "../../../../shared/src/lib/sass/mixins/focus" as focus;
@use "../../../../shared/src/lib/sass/mixins/focus" as focus-variables;
@use "../../../../../dist/libs/tokens/scss/tokens.constants" as constants;
@use "../../../../shared/src/lib/sass/utils" as utils;
@use "../../../../shared/src/lib/sass/mixins/connotation/config" with (
	$connotations: accent cta,
	$shades: primary primary-text primary-increment intermediate firm fierce,
	$default: accent,
);
@use "../../../../shared/src/lib/sass/mixins/connotation" as connotation;
@use "../../../../shared/src/lib/sass/mixins/appearance/config" as appearance-config with (
	$appearances: fieldset,
	$states: idle hover checked checkedAndHover disabled readonly,
	$default: fieldset,
);
@use "../../../../shared/src/lib/sass/mixins/appearance" as appearance;
@use "../../../../../dist/libs/tokens/scss/size.variables" as size;
@use "../../../../shared/src/lib/sass/mixins/border-radius" as border-radius-variables;


$control-size: #{size.$vvd-size-ultra-condensed};
$control-border: 2px;

:host(:focus-visible) {
	outline: none;
}

:host([disabled]) {
	cursor: not-allowed;
}

.base {
	@include connotation.connotation (radio);
	@include appearance.appearance;

	display: inline-flex;
	align-items: center;
	cursor: pointer;
	gap: 8px;

	@supports (user-select: none) {
		user-select: none;
	}

	&.disabled {
		pointer-events: none;
	}
}

.control {
	position: relative;
	flex-shrink: 0;
	border-radius: #{border-radius-variables.$border-radius-full};
	block-size: $control-size;
	box-shadow: inset 0 0 0 $control-border var(#{appearance.get-appearance-token(outline)});
	inline-size: $control-size;

	.base:not(.checked) & {
		background-color: var(#{appearance.get-appearance-token(fill)});
	}

	&::after {
		position: absolute;
		border-radius: inherit;
		background-color: var(#{appearance.get-appearance-token(outline)});
		content: "";
		inset: 5px;
		opacity: 1;
		transition: opacity 0.2s;

		.base:not(.checked) & {
			opacity: 0;
		}
	}

	:host(:focus-visible) & {
		#{focus-variables.$focus-inset}: -3px;
		#{focus-variables.$focus-stroke-gap-color}: transparent;

		&::before {
			@include focus.focus;

			position: absolute;
			display: block;
			border-radius: inherit;
			block-size: $control-size;
			content: "";
			inline-size: $control-size;
		}
	}
}

label {
	color: var(#{constants.$vvd-color-canvas-text});
	cursor: pointer;
	font: var(#{constants.$vvd-typography-base});
}

.focus-indicator {
	#{focus-variables.$focus-inset}: -3px;
	#{focus-variables.$focus-stroke-gap-color}: transparent;

	border-radius: #{border-radius-variables.$border-radius-full};

	:host(:not(:focus-visible)) & {
		display: none;
	}
}
