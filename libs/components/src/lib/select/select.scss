@use '../../../../../dist/libs/tokens/scss/tokens.constants' as constants;
@use '../../../../shared/src/lib/sass/mixins/connotation/config' with (
	$connotations: accent,
	$shades: primary primary-text primary-increment intermediate faint soft firm
		fierce,
	$default: accent
);
@use '../../../../shared/src/lib/sass/mixins/connotation' as connotation;
@use '../../../../shared/src/lib/sass/mixins/appearance/config' as
	appearance-config with (
	$appearances: fieldset ghost,
	$states: idle hover disabled readonly error success,
	$default: fieldset
);
@use '../../../../shared/src/lib/sass/mixins/appearance' as appearance;
@use '../../../../../dist/libs/tokens/scss/size.variables' as size;
@use '../../../../shared/src/lib/sass/mixins/focus' as focus;
@use '../../../../shared/src/lib/sass/mixins/focus' as focus-variables;
@use 'partials/variables' as variables;
@use '../../../../shared/src/lib/sass/mixins/border-radius' as
	border-radius-variables;
@import '../../shared/patterns/chevron';

$low-ink-color: --_low-ink-color;

:host(:focus-visible) {
	outline: none;
}

:host {
	display: inline-flex;
	flex-direction: column;
	gap: 4px;
	#{$low-ink-color}: var(#{constants.$vvd-color-neutral-600});
	#{focus-variables.$focus-stroke-gap-color}: transparent;
}

:host([disabled]) {
	#{$low-ink-color}: var(#{constants.$vvd-color-neutral-400});
	cursor: not-allowed;
}

.label {
	color: var(#{constants.$vvd-color-canvas-text});
	contain: inline-size;
	font: var(#{constants.$vvd-typography-base});
}

.control {
	@include appearance.appearance;
	@include connotation.connotation(select);

	& {
		#{variables.$select-icon-size}: 20px;

		display: flex;
		align-items: center;
		justify-content: space-between;
		border-radius: var(#{variables.$select-control-border-radius});
		background-color: var(#{appearance.get-appearance-token(fill)});
		block-size: #{size.$vvd-size-normal};
		box-shadow: inset 0 0 0 1px var(#{appearance.get-appearance-token(outline)});
		color: var(#{appearance.get-appearance-token(text)});
		font: var(#{constants.$vvd-typography-base});
		gap: 8px;
		padding-inline: 16px;
		transition: box-shadow 0.2s, background-color 0.2s;
	}

	&.size-condensed {
		#{variables.$select-icon-size}: 16px;
		block-size: #{size.$vvd-size-condensed};

		& .chevron {
			font-size: 12px;
		}
	}

	&-wrapper {
		position: relative;
	}

	&:not(.disabled) {
		cursor: pointer;
	}

	&.disabled {
		pointer-events: none;
	}

	&:not(.shape-pill) {
		#{variables.$select-control-border-radius}: #{border-radius-variables.$border-radius-normal};
	}

	&.shape-pill {
		#{variables.$select-control-border-radius}: #{border-radius-variables.$border-radius-extra-expanded};
	}

	:host(:focus-visible) & {
		@include focus.focus;
	}
}

.listbox {
	display: flex;
	max-height: var(variables.$select-height, 408px);
	flex-direction: column;
	padding: 4px;
	gap: 2px;
	overflow-y: auto;

	:host([multiple]:focus-visible) & {
		@include focus.focus;

		border-radius: #{border-radius-variables.$border-radius-normal};
	}
}

.selected-value {
	display: flex;
	overflow: hidden;
	flex-grow: 1;
	align-items: center;
	column-gap: 12px;
	white-space: nowrap;

	.text {
		overflow: hidden;
		max-inline-size: 100%;
		text-overflow: ellipsis;

		.control.shows-placeholder & {
			color: var(#{constants.$vvd-color-neutral-600});
		}
	}

	slot[name='icon'] {
		flex: 0 0 var(#{variables.$select-icon-size});
		font-size: var(#{variables.$select-icon-size});
		line-height: 1;
	}

	.control.has-meta & {
		padding-inline-end: 8px;
	}
}

.feedback-wrapper {
	display: contents;
}

::part(popup-base) {
	inline-size: max-content;
	min-inline-size: var(#{variables.$select-fixed-width}, 100%);

	:host([multiple]) & {
		position: static;
	}
}
