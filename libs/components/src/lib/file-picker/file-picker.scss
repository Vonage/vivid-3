@use 'partials/variables' as variables;
@use '@repo/tokens/scss/tokens.constants' as constants;
@use '@repo/tokens/scss/size.variables' as size;
@use '@repo/shared/mixins/border-radius' as border-radius-variables;
@use '@repo/shared/mixins/focus' as focus;
@use '@repo/shared/mixins/focus' as focus-variables;
@use '@repo/shared/mixins/scrollbar' as scrollbar;

$low-ink-color: --_low-ink-color;

:host {
	display: block;
	max-inline-size: 400px;
}

.base {
	display: flex;
	flex-direction: column;
	block-size: inherit;
	max-block-size: inherit;
	#{$low-ink-color}: var(#{constants.$vvd-color-neutral-600});
}

.control-wrapper {
	display: flex;
	flex-direction: column;
	block-size: inherit;
	gap: 4px;
	max-block-size: inherit;
}

.control {
	position: relative;
	display: flex;
	box-sizing: border-box;
	flex-wrap: wrap;
	align-items: center;
	justify-content: center;
	padding: 16px;
	border: 1px dashed var(#{constants.$vvd-color-neutral-400});
	border-radius: #{border-radius-variables.$border-radius-normal};
	background-color: var(#{constants.$vvd-color-cta-50});
	color: var(#{constants.$vvd-color-neutral-600});
	cursor: pointer;
	font: var(#{constants.$vvd-typography-base});
	gap: 8px;
	inline-size: 100%;
	min-block-size: 52px;
	outline: none;
	transition: all 0.3s ease;

	.upload-text {
		display: flex;
		align-items: center;
		justify-content: center;
		color: var(#{constants.$vvd-color-neutral-600});
		isolation: isolate;
		pointer-events: none;
		text-align: center;
		transition: all 0.3s ease;
	}

	@media (hover: hover) {
		&:hover {
			.upload-text {
				color: var(#{constants.$vvd-color-neutral-800});
			}
		}
	}

	&.dz-drag-hover {
		.upload-text {
			color: var(#{constants.$vvd-color-neutral-800});
		}
	}

	&:not(.size-expanded) {
		min-block-size: 52px;
	}
	&.size-expanded {
		min-block-size: 120px;
	}

	&:focus-visible {
		#{focus-variables.$focus-stroke-gap-color}: transparent;

		@include focus.focus;
	}

	&:active,
	&:focus-visible {
		border-color: var(#{constants.$vvd-color-cta-400});
		background-color: var(#{constants.$vvd-color-cta-100});
		box-shadow: 0 2px 8px rgb(0 0 0 / 10%);
		transform: translateY(-1px);
	}

	@media (hover: hover) {
		&:hover {
			border-color: var(#{constants.$vvd-color-cta-400});
			background-color: var(#{constants.$vvd-color-cta-100});
			box-shadow: 0 2px 8px rgb(0 0 0 / 10%);
			transform: translateY(-1px);
		}
	}

	&:active {
		box-shadow: 0 1px 4px rgb(0 0 0 / 10%);
		transform: translateY(0);
	}

	&.dz-drag-hover {
		border-color: var(#{constants.$vvd-color-cta-200});
		background-color: var(#{constants.$vvd-color-cta-200});
		outline: 2px dashed var(#{constants.$vvd-color-cta-500});
		transform: scale(1.02);
	}
}

.upload-icon {
	animation: subtle-pulse 2s ease-in-out infinite;
	color: var(#{constants.$vvd-color-cta-600});
	pointer-events: none; // Allow clicks to pass through to parent
	transition: all 0.3s ease;

	@media (hover: hover) {
		.control:hover & {
			animation: none; // Stop animation on hover for better interaction feedback
			color: var(#{constants.$vvd-color-cta-700});
			transform: scale(1.1);
		}
	}

	.control:active & {
		transform: scale(1.05);
	}

	.control.dz-drag-hover & {
		animation: none;
		color: var(#{constants.$vvd-color-neutral-800});
		transform: scale(1.15);
	}
}

@keyframes subtle-pulse {
	0%,
	100% {
		opacity: 1;
		transform: scale(1);
	}
	50% {
		opacity: 0.8;
		transform: scale(1.05);
	}
}

.main {
	pointer-events: none;
}

.dz-preview {
	display: grid;
	box-sizing: border-box;
	padding: 8px;
	border: 1px solid var(#{constants.$vvd-color-neutral-300});
	border-radius: #{border-radius-variables.$border-radius-normal};
	background-color: var(
		#{variables.$file-picker-list-item-background-color},
		var(#{constants.$vvd-color-canvas})
	);
	grid-template-columns: 1fr auto;
	grid-template-rows: auto auto;
	inline-size: 100%;

	.dz-details {
		display: flex;
		min-width: 0;
		flex-direction: column;
		max-inline-size: 100%;

		.dz-filename {
			overflow: hidden;
			color: var(#{constants.$vvd-color-canvas-text});
			font: var(#{constants.$vvd-typography-base});
			text-overflow: ellipsis;
			white-space: nowrap;
		}

		.dz-size {
			color: var(#{constants.$vvd-color-neutral-600});
			font: var(#{constants.$vvd-typography-base-condensed});
		}
	}

	.dz-error-message {
		display: flex;
		align-items: center;
		color: var(#{constants.$vvd-color-alert-600});
		font: var(#{constants.$vvd-typography-base-condensed-bold});
		gap: 4px;
		margin-block-start: 4px;
	}

	&:not(.dz-error) {
		.dz-error-message {
			display: none;
		}
	}

	&.dz-error {
		border: 1px solid var(#{constants.$vvd-color-alert-500});
		background-color: var(#{constants.$vvd-color-alert-50});

		.dz-details .dz-size,
		.dz-progress {
			display: none;
		}
	}

	.remove-btn {
		display: inline;
		align-self: center;
		grid-column: 2 / -1;
		grid-row: 1 / -1;
	}
}

.preview-list {
	@include scrollbar.scrollbar;

	& {
		display: flex;
		flex-direction: column;
		gap: 12px;
		margin-block-start: 12px;
		overflow-y: auto;
	}

	&:empty {
		display: none;
	}
}
