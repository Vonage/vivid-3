@use 'partials/variables' as variables;
@use '../../../../../dist/libs/tokens/scss/tokens.constants' as constants;
@use '../../../../../dist/libs/tokens/scss/size.variables' as size;
@use '../../../../shared/src/lib/sass/mixins/border-radius' as
	border-radius-variables;
@use '../../../../shared/src/lib/sass/mixins/focus' as focus;
@use '../../../../shared/src/lib/sass/mixins/focus' as focus-variables;
@use '../../../../shared/src/lib/sass/mixins/scrollbar' as scrollbar;

$low-ink-color: --_low-ink-color;

:host {
	display: block;
	max-inline-size: 400px;
}

.base {
	display: flex;
	flex-direction: column;
}

.control {
	display: flex;
	box-sizing: border-box;
	flex-wrap: wrap;
	align-items: center;
	justify-content: center;
	padding: 16px;
	border: 1px dashed var(#{constants.$vvd-color-neutral-400});
	border-radius: #{border-radius-variables.$border-radius-normal};
	background-color: var(#{constants.$vvd-color-cta-50});
	color: var(#{constants.$vvd-color-neutral-600});
	cursor: pointer;
	font: var(#{constants.$vvd-typography-base});
	gap: 8px;
	inline-size: 100%;
	min-block-size: 52px;
	outline: none;
	transition: all 0.3s ease;
	&:not(.size-expanded) {
		min-block-size: 52px;
	}
	&.size-expanded {
		min-block-size: 120px;
	}
	&:focus-visible {
		#{focus-variables.$focus-stroke-gap-color}: transparent;
		#{focus-variables.$focus-inset}: 1px;

		@include focus.focus;
	}
	&:hover,
	&:active,
	&:focus-visible {
		border-style: solid;
		background-color: var(#{constants.$vvd-color-cta-100});
	}
}

.main {
	pointer-events: none;
}

.dz-preview {
	display: grid;
	box-sizing: border-box;
	padding: 8px;
	border: 1px solid var(#{constants.$vvd-color-neutral-300});
	border-radius: #{border-radius-variables.$border-radius-normal};
	background-color: var(
		#{variables.$file-picker-list-item-background-color},
		var(#{constants.$vvd-color-canvas})
	);
	grid-template-columns: 1fr auto;
	grid-template-rows: auto auto;
	inline-size: 100%;

	.dz-details {
		display: flex;
		min-width: 0;
		flex-direction: column;
		max-inline-size: 100%;

		.dz-filename {
			overflow: hidden;
			color: var(#{constants.$vvd-color-canvas-text});
			font: var(#{constants.$vvd-typography-base});
			text-overflow: ellipsis;
			white-space: nowrap;
		}

		.dz-size {
			color: var(#{constants.$vvd-color-neutral-600});
			font: var(#{constants.$vvd-typography-base-condensed});
		}
	}

	.dz-error-message {
		color: var(#{constants.$vvd-color-alert-500});
		font: var(#{constants.$vvd-typography-base-condensed});
		margin-block-start: 4px;
	}

	&:not(.dz-error) {
		.dz-error-message {
			display: none;
		}
	}

	&.dz-error {
		border: 1px solid var(#{constants.$vvd-color-alert-500});

		.dz-details .dz-size,
		.dz-progress {
			display: none;
		}
	}

	.remove-btn {
		display: inline;
		align-self: center;
		grid-column: 2 / -1;
		grid-row: 1 / -1;
	}
}

.message {
	margin-block-start: 4px;
	#{$low-ink-color}: var(#{constants.$vvd-color-neutral-600});
}

.preview-list {
	@include scrollbar.scrollbar;

	& {
		display: flex;
		flex-direction: column;
		gap: 12px;
		margin-block-start: 12px;
		max-block-size: var(variables.$file-picker-list-block-size, 408px);
		overflow-y: auto;
	}

	&:empty {
		display: none;
	}
}
