@use '@repo/tokens/scss/tokens.constants' as constants;
@use 'partials/variables' as variables;
@use '@repo/shared/mixins/border-radius' as border-radius-variables;
@use '@repo/shared/mixins/focus' as focus;
@use '@repo/shared/mixins/focus' as focus-variables;
@use '../../shared/patterns/anchored' as anchored;
@include anchored.anchored;

.base {
	display: flex;
	overflow: hidden auto;
	box-sizing: border-box;
	flex-direction: column;
	padding: 4px;
	gap: 8px;
	inline-size: max-content;
	max-block-size: var(#{variables.$menu-block-size}, 408px);
	min-inline-size: var(#{variables.$menu-min-inline-size});

	@media not all and (width >= 600px) {
		max-inline-size: var(#{variables.$menu-max-inline-size}, 300px);
	}

	@media (width >= 600px) {
		max-inline-size: var(#{variables.$menu-max-inline-size});
	}
}

::slotted(a) {
	color: var(#{constants.$vvd-color-canvas-text});
	text-decoration: none;
}

::slotted(a[data-vvd-component='menuitem']:focus-visible) {
	@include focus.focus;
	#{focus-variables.$focus-stroke-gap-color}: transparent;

	display: block;
}

.header {
	padding-block-start: 4px;
	padding-inline: 8px;

	.hide-header & {
		display: none;
	}
}

.body {
	display: flex;
	flex-direction: column;
	row-gap: 1px;

	.hide-body & {
		display: none;
	}
}

.action-items {
	display: flex;
	justify-content: flex-end;
	gap: 8px;
	padding-block-end: 4px;
	padding-inline: 12px;

	.hide-actions & {
		display: none;
	}
}
