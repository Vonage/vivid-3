@use '../../../../../dist/libs/tokens/scss/tokens.constants' as constants;
@use '../../../../shared/src/lib/sass/mixins/connotation/config' with (
	$connotations: accent cta alert success,
	$shades: primary soft,
	$default: accent
);
@use '../../../../shared/src/lib/sass/mixins/connotation' as connotation;
@use '../../../../shared/src/lib/sass/mixins/appearance/config' as
	appearance-config with (
	$appearances: subtle,
	$states: idle,
	$default: subtle
);
@use '../../../../shared/src/lib/sass/mixins/appearance' as appearance;
@use '../../../../shared/src/lib/sass/mixins/border-radius' as
	border-radius-variables;

$block-size: 6px;
$rounded-border-radius: #{border-radius-variables.$border-radius-semi-condensed};

.base {
	height: $block-size;
	align-items: center;
	margin: 0;
	outline: none;

	&:not(.connotation-pacific) {
		@include connotation.connotation(progress);
		@include appearance.appearance;
	}

	&.connotation-pacific {
		$start: var(#{constants.$vvd-color-information-200});
		$end: var(#{constants.$vvd-color-cta-600});

		#{connotation.get-connotation-token(primary)}: linear-gradient(
			to right,
			$start,
			$end
		);
	}
}

.progress {
	position: relative;
	display: flex;
	overflow: hidden;
	align-items: center;
	block-size: 100%;
	inline-size: 100%;

	.base:not(.connotation-pacific) & {
		background-color: var(#{appearance.get-appearance-token(fill)});
	}

	.base.connotation-pacific & {
		background-color: var(#{constants.$vvd-color-neutral-100});
	}

	/* Shape */
	.base:not(.shape-sharp) & {
		border-radius: $rounded-border-radius;
	}
}

.indeterminate {
	display: flex;
	border-radius: inherit;
	background-color: var(#{connotation.get-connotation-token(primary)});
	block-size: 100%;
	inline-size: 100%;
}

.determinate {
	border-radius: inherit;
	background-color: var(#{connotation.get-connotation-token(primary)});
	block-size: 100%;
	transition: all 0.2s ease-in-out;

	.connotation-pacific & {
		background-image: var(#{connotation.get-connotation-token(primary)});
	}

	.reverse & {
		position: absolute;
		right: 0;
	}

	.paused & {
		background: var(#{constants.$vvd-color-neutral-300});
	}
}

.indicator-1 {
	animation: indeterminate-1 2s infinite;
	inline-size: 30%;
}

.indicator-2 {
	animation: indeterminate-2 2s infinite;
	inline-size: 60%;
}

.indicator-1,
.indicator-2 {
	position: absolute;
	animation-timing-function: cubic-bezier(0.4, 0, 0.6, 1);
	background-color: var(#{constants.$vvd-color-neutral-100});
	block-size: 100%;
	opacity: 0;

	.connotation-pacific & {
		background-image: var(#{connotation.get-connotation-token(primary)});
	}

	.paused & {
		animation-play-state: paused;
		background-color: var(#{connotation.get-connotation-token(primary)});
	}

	.reverse & {
		animation-direction: reverse;
	}
}

@keyframes indeterminate-1 {
	0% {
		opacity: 1;
		transform: translateX(-100%);
	}
	70% {
		opacity: 1;
		transform: translateX(300%);
	}
	70.01% {
		opacity: 0;
	}
	100% {
		opacity: 0;
		transform: translateX(300%);
	}
}

@keyframes indeterminate-2 {
	0% {
		opacity: 0;
		transform: translateX(-150%);
	}
	29.99% {
		opacity: 0;
	}
	30% {
		opacity: 1;
		transform: translateX(-150%);
	}
	100% {
		opacity: 1;
		transform: translateX(166.66%);
	}
}
