@use '@repo/tokens/scss/tokens.constants' as constants;
@use '@repo/tokens/scss/size.variables' as size;
@use '@repo/shared/mixins/connotation/config' with (
	$connotations: accent cta,
	$shades: primary primary-text primary-increment firm soft faint pale dim,
	$default: accent
);
@use '@repo/shared/mixins/connotation' as connotation;
@use '@repo/shared/mixins/appearance/config' as appearance-config with (
	$appearances: listitem,
	$states: idle hover selected selectedAndHover,
	$default: listitem
);
@use '@repo/shared/mixins/appearance' as appearance;
@use '@repo/shared/mixins/focus' as focus;
@use '@repo/shared/mixins/focus' as focus-variables;
@use './partials/variables' as variables;

:host {
	block-size: 100%; // Only needed for older WebKit browsers
	min-inline-size: 80px;
}

:host(:focus-visible) {
	outline: none;
}

:host([data-fixed]) {
	position: sticky;
	z-index: 5;
	background: var(
		#{variables.$data-grid-cell-background},
		var(#{constants.$vvd-color-canvas})
	);
}

:host([data-fixed])::before {
	position: absolute;
	z-index: 1;
	top: 0;
	right: 0;
	width: 1px;
	block-size: 100%;
	box-shadow: 4px 0 4px #0000001a, 2px 0 2px #0000000d, 1px 0 1px #0000000d;
	content: '';
	pointer-events: none;
}

.base {
	@include connotation.connotation(data-grid-cell);
	@include appearance.appearance;

	& {
		display: flex;
		box-sizing: border-box;
		align-items: center;
		border-bottom: 1px solid var(#{constants.$vvd-color-neutral-300});
		block-size: var(
			#{variables.$data-grid-cell-block-size},
			var(#{variables.$data-grid-cell-default-block-size})
		);
		color: var(#{appearance.get-appearance-token(text)});
		font: var(#{constants.$vvd-typography-base});
		min-block-size: #{size.$vvd-size-expanded};
		padding-block: 13px 14px;
		padding-inline: 12px;
	}

	:host(:focus-visible) & {
		#{focus-variables.$focus-stroke-gap-color}: transparent;

		@include focus.focus;
	}

	:host([cell-type='columnheader']) & {
		border-color: var(#{constants.$vvd-color-canvas-text});
		font: var(#{constants.$vvd-typography-base-bold});
		#{variables.$data-grid-cell-default-block-size}: #{size.$vvd-size-expanded};
		#{variables.$data-grid-cell-default-white-space}: nowrap;
	}

	:host(:not([cell-type='columnheader'])) & {
		#{variables.$data-grid-cell-default-block-size}: 100%; // Fit content
		#{variables.$data-grid-cell-default-white-space}: normal;
	}

	:host(:is([selected]):not([cell-type='columnheader'])) & {
		background-color: var(#{appearance.get-appearance-token(fill)});
	}
}

slot {
	display: block;
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: var(
		#{variables.$data-grid-cell-white-space},
		var(#{variables.$data-grid-cell-default-white-space})
	);
	:host(:not([cell-type='columnheader'][aria-sort])) & {
		inline-size: 100%;
	}
}

.header-icon {
	margin-inline-start: 16px;
}
