@use "../focus/partials/variables" as focus-variables;

@use "../../../../../dist/libs/tokens/scss/tokens.constants" as constants;
@use "../../../../shared/src/lib/sass/mixins/connotation/config" with (
	$connotations: accent success alert,
	$shades: primary backdrop intermediate firm faint soft,
	$default: accent,
);
@use "../../../../shared/src/lib/sass/mixins/connotation" as connotation;
@use "../../../../shared/src/lib/sass/mixins/appearance/config" as appearance-config with (
	$appearances: fieldset ghost,
	$states: idle hover disabled readonly,
	$default: fieldset,
);
@use "../../../../shared/src/lib/sass/mixins/appearance" as appearance;
@use "../../../../../dist/libs/tokens/scss/size.variables" as size;

@use "../focus/partials/variables" as variables;

$low-ink-color: --_low-ink-color;
$outline-width: 2px;

:host {
	display: inline-block;
}

.base {
	@include appearance.appearance;
	@include connotation.connotation (text-area);

	display: inline-grid;
	grid-template-columns: 1fr max-content;
	inline-size: 100%;
	row-gap: 4px;

	@supports(user-select: none) {
		user-select: none;
	}

	&:not(.disabled) {
		#{$low-ink-color}: var(#{constants.$vvd-color-neutral-600});
	}

	&.disabled {
		#{$low-ink-color}: var(#{appearance.get-appearance-token(text)});
		pointer-events: none;
	}
}

.label {
	color: var(#{constants.$vvd-color-canvas-text});
	contain: inline-size;
	font: var(#{constants.$vvd-typography-base});
	grid-column: 1 / 2;
	grid-row: 1;
	line-height: 20px;
}

.char-count {
	color: var(#{$low-ink-color});
	font: var(#{constants.$vvd-typography-base});
	grid-column: 2 / -1;
}

.control {
	padding: 8px 16px;
	border: 0 none;
	appearance: none; /* for box-shadow visibility on IOS */
	background-color: var(#{appearance.get-appearance-token(fill)});
	border-radius: 6px;
	box-shadow: inset 0 0 0 1px var(#{appearance.get-appearance-token(outline)});
	color: var(#{appearance.get-appearance-token(text)});
	font: var(#{constants.$vvd-typography-base});
	grid-column: 1 / -1;
	min-block-size: #{size.$vvd-size-normal};
	resize: none;
	transition: box-shadow .2s, background-color .2s, color .2s;

	&:disabled {
		cursor: not-allowed;
		opacity: 1; /* 2. correct opacity on iOS */
		pointer-events: none;
		-webkit-text-fill-color: var(#{appearance.get-appearance-token(text)}); /* 1. sets text fill to current `color` for safari */
	}

	&::placeholder,
	&:disabled::placeholder {
		opacity: 1; /* 2. correct opacity on iOS */
		pointer-events: none;
		-webkit-text-fill-color: var(#{$low-ink-color}); /* 1. sets text fill to current `color` for safari */
	}

	&:focus {
		outline: $outline-width solid var(#{variables.$focus-stroke-color}, currentColor);
		outline-offset: -$outline-width;
	}

	:host([resize="both"]) & {
		resize: both;
	}

	:host([resize="horizontal"]) & {
		resize: horizontal;
	}

	:host([resize="vertical"]) & {
		resize: vertical;
	}
}
