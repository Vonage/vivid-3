@use '../../../../../../../dist/libs/tokens/scss/tokens.constants' as constants;
@use '../../../../../../shared/src/lib/sass/mixins/connotation/config' with (
	$connotations: accent,
	$shades: primary firm faint soft dim pale,
	$default: accent
);
@use '../../../../../../shared/src/lib/sass/mixins/connotation/index' as
	connotation;
@use '../../../../../../shared/src/lib/sass/mixins/appearance/config' as
	appearance-config with (
	$appearances: listitem,
	$states: idle hover active selected selectedAndHover selectedAndDisabled,
	$default: listitem
);
@use '../../../../../../shared/src/lib/sass/mixins/appearance/index' as
	appearance;
@use '../../../../../../shared/src/lib/sass/mixins/border-radius' as
	border-radius-variables;
@use '../../../../../../shared/src/lib/sass/mixins/focus/index' as focus;

:host {
	display: inline-block;
}

.time-pickers {
	$option-inline-size: 50px;
	$option-block-size: 28px;
	$option-gap: 4px;
	$num-options-visible: 6;
	$num-options-to-reserve-space-for: ($num-options-visible - 1);

	@function space-for-options($n) {
		@return $option-block-size * $n + $option-gap * ($n - 1);
	}

	display: flex;
	overflow: hidden;
	justify-content: center;
	padding: $option-gap;
	block-size: space-for-options($num-options-visible);
	gap: $option-gap;

	.picker {
		position: relative;
		display: flex;
		overflow: hidden;
		flex-direction: column;
		padding: 0;
		border-radius: #{border-radius-variables.$border-radius-semi-condensed};
		margin: 0;
		gap: $option-gap;
		inline-size: $option-inline-size;
		list-style: none;

		// Hide scrollbar when not hovering
		&:hover {
			overflow-y: auto;
		}

		// Reserve space to allow scrolling options to top
		&::after {
			display: block;
			flex-shrink: 0;
			block-size: space-for-options($num-options-to-reserve-space-for);
			content: '';
		}

		&:focus-visible {
			#{focus.$focus-stroke-gap-color}: transparent;
			#{focus.$focus-inset}: -2px;

			@include focus.focus;
		}
	}

	.option {
		@include connotation.connotation(time-picker);
		@include appearance.appearance;

		& {
			display: flex;
			flex-shrink: 0;
			align-items: center;
			justify-content: center;
			border-radius: #{border-radius-variables.$border-radius-semi-condensed};
			background-color: var(#{appearance.get-appearance-token(fill)});
			block-size: $option-block-size;
			color: var(#{appearance.get-appearance-token(text)});
			cursor: pointer;
			font: var(#{constants.$vvd-typography-base});
			inline-size: $option-inline-size;
		}
	}
}
