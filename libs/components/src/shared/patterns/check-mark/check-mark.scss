@use "../../../../../../dist/libs/tokens/scss/tokens.constants" as constants;

@use "../../../../../shared/src/lib/sass/mixins/connotation/config" with (
	$connotations: accent cta,
	$shades: primary primary-text primary-increment intermediate backdrop firm,
	$default: accent
);
@use "../../../../../shared/src/lib/sass/mixins/connotation" as connotation;

@use "../../../../../shared/src/lib/sass/mixins/appearance/config" as appearance-config with (
	$appearances: fieldset,
	$states: idle hover checked checkedAndHover disabled readonly,
	$default: fieldset
);
@use "../../../../../shared/src/lib/sass/mixins/appearance" as appearance;
@use "../../../../../../dist/libs/tokens/scss/size.variables" as size;

$size: #{size.$vvd-size-ultra-condensed};

:host {
	display: inline-flex;
}

.base {
	@include connotation.connotation(checkbox);
	@include appearance.appearance;

	&.no-hover {
		pointer-events: none;
	}
}

.control {
	position: relative;
	display: flex;
	flex-shrink: 0;
	align-items: center;
	justify-content: center;
	background-color: var(#{appearance.get-appearance-token(fill)});
	block-size: $size;
	border-radius: 5px;
	box-shadow: inset 0 0 0 2px var(#{appearance.get-appearance-token(outline)});
	color: var(#{appearance.get-appearance-token(text)});
	inline-size: $size;
}

.icon {
	font-size: calc(#{$size} * 0.6);
	line-height: 1;
}