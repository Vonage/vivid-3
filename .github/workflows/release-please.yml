on:
  push:
    branches:
      - main

  workflow_dispatch:
    inputs:
      force-release:
        description: 'Perform a release even if release-please did not create a new release'
        required: true
        type: boolean

name: release-please
jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      vivid_release_created: ${{ steps.release.outputs['libs/components--release_created'] }}
      vivid_release_sha: ${{ steps.release.outputs['libs/components--sha'] }}
      eslint_plugin_release_created: ${{ steps.release.outputs['libs/eslint-plugin--release_created'] }}
      eslint_plugin_release_sha: ${{ steps.release.outputs['libs/eslint-plugin--sha'] }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release

      # As we've instructed release-please not to create a vivid-vue release for now, we need to create the tag ourselves
      - name: Create Vivid Vue Tag
        if: ${{ steps.release.outputs['libs/components--release_created'] }}
        uses: actions/github-script@v6
        env:
          VIVID_VERSION: ${{ steps.release.outputs['libs/components--version'] }}
          VIVID_SHA: ${{ steps.release.outputs['libs/components--sha'] }}
        with:
          script: |
            const { VIVID_VERSION, VIVID_SHA } = process.env
            github.rest.git.createRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `refs/tags/vivid-vue-v${VIVID_VERSION}`,
                sha: VIVID_SHA
            })

  should-release:
    runs-on: ubuntu-latest
    needs: release-please
    outputs:
      should_release: ${{ steps.should-release.outputs.should_release }}
      release_sha: ${{ steps.should-release.outputs.release_sha }}
    steps:
      - id: should-release
        run: |
          echo "::set-output name=should_release::${{ needs.release-please.outputs.vivid_release_created == 'true' || needs.release-please.outputs.eslint_plugin_release_created == 'true' || github.event.inputs.force-release == 'true' }}"
          echo "::set-output name=release_sha::${{ needs.release-please.outputs.vivid_release_sha || needs.release-please.outputs.eslint_plugin_release_sha || github.event.pull_request.head.sha }}"

  build:
    runs-on: ubuntu-latest
    needs: should-release
    if: ${{ needs.should-release.outputs.should_release == 'true' }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ needs.should-release.outputs.release_sha }}

      - uses: actions/setup-node@v3
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'

      - name: build
        run: |
          npm ci --ignore-scripts
          npx nx run components:build
          npx nx run components:generateMeta
          npx nx run vue-wrappers:build
          npx nx run eslint-plugin:build
          npx nx run vue-docs:build

      - name: upload-artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist/
          include-hidden-files: true

  vivid-publish:
    needs: build
    uses: ./.github/workflows/_publish.yml
    with:
      path: dist/libs/components
    secrets: inherit

  vivid-vue-publish:
    needs: build
    uses: ./.github/workflows/_publish.yml
    with:
      path: dist/libs/vue-wrappers
    secrets: inherit

  eslint-plugin-publish:
    needs: build
    uses: ./.github/workflows/_publish.yml
    with:
      path: dist/libs/eslint-plugin
    secrets: inherit

  deploy-deno:
    needs: build
    if: ${{ needs.should-release.outputs.should_release == 'true' }}
    uses: ./.github/workflows/_deploy-deno.yml
