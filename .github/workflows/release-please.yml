on:
  push:
    branches:
      - main

name: release-please
jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.release.outputs.releases_created }}
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: node
          path: libs/components
          package-name: vivid
          monorepo-tags: true
          bootstrap-sha: 3f548d7c4a9264505451d7c6880654ff1ba66730

  build:
    runs-on: ubuntu-latest
    needs: release-please
    if: ${{ needs.release-please.outputs.releases_created }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: 'https://registry.npmjs.org'

      - name: build
        run: |
          npm ci --ignore-scripts
          npm run postinstall
          npx nx run components:build
          npx nx run components:generateMeta

      - name: upload-artifacts
        uses: actions/upload-artifact@v3
        with:
          name: release-artifacts
          path: dist/

  npm-publish:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ needs.release-please.outputs.releases_created }}
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: 'https://registry.npmjs.org'

      - name: Download Build
        uses: actions/download-artifact@v3
        with:
          name: release-artifacts
          path: dist/

      - name: publish npm package
        run: npm publish dist/libs/components --//registry.npmjs.org/:_authToken=$NODE_AUTH_TOKEN
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_VVD_VNG_AUTOMATION_TOKEN }}

  github-publish:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ needs.release-please.outputs.releases_created }}
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: 'https://registry.npmjs.org'

      - name: Download Build
        uses: actions/download-artifact@v3
        with:
          name: release-artifacts
          path: dist/

      - name: publish to github packages
        run: npm publish ./dist/libs/components --registry=https://npm.pkg.github.com --//npm.pkg.github.com/:_authToken=$NODE_AUTH_TOKEN
        env:
          NODE_AUTH_TOKEN: ${{ secrets.VNG_VVD_PAT }}

  deploy-deno:
    needs: release-please
    if: ${{ needs.release-please.outputs.releases_created }}
    uses: ./.github/workflows/_deploy-deno.yml
