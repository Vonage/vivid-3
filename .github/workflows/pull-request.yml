name: Pull Request

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
      - converted_to_draft
    branches:
      - main

concurrency:
  group: ci-tests-${{ github.ref }}-1
  cancel-in-progress: true

jobs:
  deps-cache:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "npm"

      - uses: actions/cache@v3
        id: cache
        with:
          path: node_modules/
          key: ${{ runner.os }}-${{ hashFiles('package-lock.json') }}

      - uses: actions/cache@v3
        id: build_cache
        with:
          path: dist/
          key: ${{ runner.os }}-dist-${{ hashFiles('libs/**/*.*') }}

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Build
        if: steps.build_cache.outputs.cache-hit != 'true'
        run: npx nx run components:build

  call-lint:
    if: github.event.pull_request.draft == false
    needs: [deps-cache]
    uses: ./.github/workflows/_lint.yml

  unit-tests:
    if: github.event.pull_request.draft == false
    needs: call-lint
    uses: ./.github/workflows/_unit-test.yml
    with:
      os: ubuntu-latest
      report_coverage: true

  upload-coverage:
    if: github.event.pull_request.draft == false
    needs: unit-tests
    uses: ./.github/workflows/_upload-coverage.yml
    with:
      os: ubuntu-latest

  call-visual-regression:
    if: github.event.pull_request.draft == false
    needs: call-lint
    uses: ./.github/workflows/_visual-regression.yml

  call-deploy-deno-preview:
    if: github.event.pull_request.draft == false
    needs: [deps-cache]
    uses: ./.github/workflows/_deploy-deno.yml

  call-lighthouse:
    if: github.event.pull_request.draft == false
    needs: [deps-cache]
    uses: ./.github/workflows/_lighthouse.yml
