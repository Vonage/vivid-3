name: ðŸš€ Publish

on:
  workflow_call:
    inputs:
      path:
        required: true
        type: string
      tag:
        required: false
        default: latest
        type: string
    secrets:
      NPM_VVD_VNG_AUTOMATION_TOKEN:
        required: true
      VNG_VVD_PAT:
        required: true

jobs:
  npm-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'

      - name: Download Build
        uses: actions/download-artifact@v4.1.7
        with:
          name: release-artifacts
          path: dist/

      - name: Check if version is already published
        id: check
        run: |
          NAME=$(npm view ${{ inputs.path }} name)
          VERSION=$(npm view ${{ inputs.path }} version)
          if npm view "$NAME@$VERSION"; then
          echo "published=true" >> "$GITHUB_OUTPUT"
          else
          echo "published=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Publish to npm registry
        if: steps.check.outputs.published == 'false'
        run: npm publish --tag ${{ inputs.tag }} ${{ inputs.path }} --//registry.npmjs.org/:_authToken=$AUTH_TOKEN
        env:
          AUTH_TOKEN: ${{ secrets.NPM_VVD_VNG_AUTOMATION_TOKEN }}

  github-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'

      - name: Download Build
        uses: actions/download-artifact@v4.1.7
        with:
          name: release-artifacts
          path: dist/

      - name: Check if version is already published
        id: check
        run: |
          NAME=$(npm view ${{ inputs.path }} name)
          VERSION=$(npm view ${{ inputs.path }} version)
          if npm view "$NAME@$VERSION" --registry=https://npm.pkg.github.com --//npm.pkg.github.com/:_authToken=$AUTH_TOKEN; then
          echo "published=true" >> "$GITHUB_OUTPUT"
          else
          echo "published=false" >> "$GITHUB_OUTPUT"
          fi
        env:
          AUTH_TOKEN: ${{ secrets.VNG_VVD_PAT }}

      - name: Publish to GitHub registry
        if: steps.check.outputs.published == 'false'
        run: npm publish --tag ${{ inputs.tag }} ${{ inputs.path }} --registry=https://npm.pkg.github.com --//npm.pkg.github.com/:_authToken=$AUTH_TOKEN
        env:
          AUTH_TOKEN: ${{ secrets.VNG_VVD_PAT }}
